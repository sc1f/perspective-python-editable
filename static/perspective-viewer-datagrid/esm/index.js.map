{"version":3,"sources":["../../src/js/index.js"],"names":["registerPlugin","_start_profiling_loop","DatagridViewModel","VIEWER_MAP","MATERIAL_STYLE","get_or_create_datagrid","element","div","datagrid","has","document","createElement","appendChild","set_element","register_listeners","innerHTML","set","get","isConnected","clear","DatagridPlugin","update","draw","invalid_viewport","e","create","view","options","set_view","_plugin_config","restore","resize","_datavis","reset_size","delete","save","config","_register_global_styles","style","textContent","head","window","customElements","define"],"mappings":"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","sourcesContent":["/******************************************************************************\r\n *\r\n * Copyright (c) 2017, the Perspective Authors.\r\n *\r\n * This file is part of the Perspective library, distributed under the terms of\r\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\r\n *\r\n */\r\n\r\nimport {registerPlugin} from \"@finos/perspective-viewer/dist/esm/utils.js\";\r\nimport {_start_profiling_loop} from \"./utils\";\r\nimport {DatagridViewModel} from \"./datagrid\";\r\nimport {VIEWER_MAP} from \"./constants\";\r\nimport MATERIAL_STYLE from \"../less/material.less\";\r\n\r\n/**\r\n * Initializes a new datagrid renderer if needed, or returns an existing one\r\n * associated with a rendering `<div>` from a cache.\r\n *\r\n * @param {*} element\r\n * @param {*} div\r\n * @returns\r\n */\r\nfunction get_or_create_datagrid(element, div) {\r\n    let datagrid;\r\n    if (!VIEWER_MAP.has(div)) {\r\n        datagrid = document.createElement(\"perspective-datagrid\");\r\n        datagrid.appendChild(document.createElement(\"slot\"));\r\n        datagrid.set_element(element);\r\n        datagrid.register_listeners();\r\n        div.innerHTML = \"\";\r\n        div.appendChild(datagrid);\r\n        VIEWER_MAP.set(div, datagrid);\r\n    } else {\r\n        datagrid = VIEWER_MAP.get(div);\r\n    }\r\n\r\n    if (!datagrid.isConnected) {\r\n        datagrid.clear();\r\n        div.innerHTML = \"\";\r\n        div.appendChild(datagrid);\r\n    }\r\n\r\n    return datagrid;\r\n}\r\n\r\n/**\r\n * <perspective-viewer> plugin.\r\n *\r\n * @class DatagridPlugin\r\n */\r\nclass DatagridPlugin {\r\n    static name = \"Datagrid\";\r\n    static selectMode = \"toggle\";\r\n    static deselectMode = \"pivots\";\r\n\r\n    static async update(div) {\r\n        try {\r\n            const datagrid = VIEWER_MAP.get(div);\r\n            await datagrid.draw({invalid_viewport: true});\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    static async create(div, view) {\r\n        const datagrid = get_or_create_datagrid(this, div);\r\n        const options = await datagrid.set_view(view);\r\n        if (this._plugin_config) {\r\n            datagrid.restore(this._plugin_config);\r\n            delete this._plugin_config;\r\n        }\r\n        await datagrid.draw(options);\r\n    }\r\n\r\n    static async resize() {\r\n        if (this.view && VIEWER_MAP.has(this._datavis)) {\r\n            const datagrid = VIEWER_MAP.get(this._datavis);\r\n            datagrid.reset_size();\r\n            await datagrid.draw({invalid_viewport: true});\r\n        }\r\n    }\r\n\r\n    static delete() {\r\n        if (this.view && VIEWER_MAP.has(this._datavis)) {\r\n            const datagrid = VIEWER_MAP.get(this._datavis);\r\n            datagrid.clear();\r\n        }\r\n    }\r\n\r\n    static save() {\r\n        if (this.view && VIEWER_MAP.has(this._datavis)) {\r\n            const datagrid = VIEWER_MAP.get(this._datavis);\r\n            return datagrid.save();\r\n        }\r\n    }\r\n\r\n    static restore(config) {\r\n        if (this.view && VIEWER_MAP.has(this._datavis)) {\r\n            const datagrid = VIEWER_MAP.get(this._datavis);\r\n            datagrid.restore(config);\r\n        } else {\r\n            this._plugin_config = config;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Appends the default tbale CSS to `<head>`, should be run once on module\r\n *  import.\r\n *\r\n */\r\nfunction _register_global_styles() {\r\n    const style = document.createElement(\"style\");\r\n    style.textContent = MATERIAL_STYLE;\r\n    document.head.appendChild(style);\r\n}\r\n\r\n/******************************************************************************\r\n *\r\n * Main\r\n *\r\n */\r\n\r\nwindow.customElements.define(\"perspective-datagrid\", DatagridViewModel);\r\n\r\nregisterPlugin(\"datagrid\", DatagridPlugin);\r\n\r\n_start_profiling_loop();\r\n_register_global_styles();\r\n"],"file":"index.js"}