{"version":3,"sources":["../../src/js/hypergrid.js"],"names":["Hypergrid","Base","Canvas","groupedHeaderPlugin","perspectivePlugin","PerspectiveDataModel","psp2hypergrid","bindTemplate","registerPlugin","TEMPLATE","style","get_styles","clear_styles","get_dynamic_styles","default_grid_properties","set_formatters","set_editors","treeLineRendererPaint","prototype","stopResizeLoop","stopPaintLoop","HypergridElement","set_data","data","schema","tschema","row_pivots","columns","force","hg_data","grid","behavior","setPSP","_hg_data","connectedCallback","host","shadowRoot","querySelector","setAttribute","restartPaintLoop","DataModel","removeAttribute","args","grid_properties","styles","renderer","Object","assign","groupedHeader","flatHeight","toString","installPlugins","_old_paint","cellRenderers","items","GroupedHeader","paint","gc","config","visibleColumns","call","addProperties","add","extend","_hgdata","HYPERGRID_INSTANCE","Symbol","grid_update","div","view","task","nrows","num_rows","cancelled","hypergrid","get_hypergrid","dataModel","_view","_table","setDirty","behaviorChanged","canvas","paintNow","style_element","element","createColumns","undefined","getOrCreateHypergrid","perspectiveHypergridElement","document","createElement","addEventListener","_is_editing","selectionModel","clear","isConnected","innerHTML","appendChild","Promise","resolve","setTimeout","resize","suppress_paint","f","divCanvas","grid_create","max_rows","max_cols","allowEvents","get_config","colPivots","column_pivots","rowPivots","data_window","start_row","end_row","id","length","json","all_columns","all","to_columns","column_paths","filter","x","_grid","setIsTree","clearSelectionState","_config","_viewer","_columns","_pad_window","hasAttribute","needsComputeCellsBounds","_outstanding","req","_plugin_config","setSelectedRowID","selected","plugin","name","create","selectMode","update","deselectMode","styleElement","save","hasRowSelections","getSelectedRowID","restore","delete","terminate","sbVScroller","sbHScroller"],"mappings":"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","sourcesContent":["/******************************************************************************\r\n *\r\n * Copyright (c) 2017, the Perspective Authors.\r\n *\r\n * This file is part of the Perspective library, distributed under the terms of\r\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\r\n *\r\n */\r\n\r\nimport Hypergrid from \"faux-hypergrid\";\r\nimport Base from \"faux-hypergrid/src/Base\";\r\nimport Canvas from \"faux-hypergrid/src/lib/Canvas\";\r\nimport groupedHeaderPlugin from \"fin-hypergrid-grouped-header-plugin\";\r\n\r\nimport * as perspectivePlugin from \"./perspective-plugin\";\r\nimport PerspectiveDataModel from \"./PerspectiveDataModel\";\r\nimport {psp2hypergrid} from \"./psp-to-hypergrid\";\r\n\r\nimport {bindTemplate, registerPlugin} from \"@finos/perspective-viewer/dist/esm/utils.js\";\r\n\r\nimport TEMPLATE from \"../html/hypergrid.html\";\r\n\r\nimport style from \"../less/hypergrid.less\";\r\nimport {get_styles, clear_styles, get_dynamic_styles, default_grid_properties} from \"./styles.js\";\r\nimport {set_formatters} from \"./formatters.js\";\r\nimport {set_editors} from \"./editors.js\";\r\nimport {treeLineRendererPaint} from \"./hypergrid-tree-cell-renderer\";\r\n\r\nCanvas.prototype.stopResizeLoop();\r\nCanvas.prototype.stopPaintLoop();\r\n\r\nbindTemplate(\r\n    TEMPLATE,\r\n    style\r\n)(\r\n    class HypergridElement extends HTMLElement {\r\n        set_data(data, schema, tschema, row_pivots, columns, force = false) {\r\n            const hg_data = psp2hypergrid(data, schema, tschema, row_pivots, columns);\r\n            if (this.grid) {\r\n                this.grid.behavior.setPSP(hg_data, force);\r\n            } else {\r\n                this._hg_data = hg_data;\r\n            }\r\n        }\r\n\r\n        connectedCallback() {\r\n            if (!this.grid) {\r\n                const host = this.shadowRoot.querySelector(\"#mainGrid\");\r\n\r\n                host.setAttribute(\"hidden\", true);\r\n                Canvas.prototype.restartPaintLoop();\r\n                this.grid = new Hypergrid(host, {DataModel: PerspectiveDataModel});\r\n                Canvas.prototype.stopPaintLoop();\r\n                host.removeAttribute(\"hidden\");\r\n                this.grid.get_styles = () => get_styles(this);\r\n                this.grid.get_dynamic_styles = (...args) => get_dynamic_styles(this, ...args);\r\n\r\n                const grid_properties = default_grid_properties();\r\n                const styles = get_styles(this);\r\n                grid_properties.renderer = [\"SimpleCell\", \"Borders\"];\r\n\r\n                // Handle grouped header plugin bugs\r\n                Object.assign(grid_properties.groupedHeader, styles[\"\"].groupedHeader);\r\n                if (typeof grid_properties.groupedHeader.flatHeight === \"number\") {\r\n                    grid_properties.groupedHeader.flatHeight = grid_properties.groupedHeader.flatHeight.toString();\r\n                }\r\n\r\n                this.grid.installPlugins([perspectivePlugin, [groupedHeaderPlugin, grid_properties.groupedHeader]]);\r\n\r\n                // Broken in fin-hypergrid-grouped-header 0.1.2\r\n                let _old_paint = this.grid.cellRenderers.items.GroupedHeader.paint;\r\n                this.grid.cellRenderers.items.GroupedHeader.paint = function(gc, config) {\r\n                    this.visibleColumns = config.grid.renderer.visibleColumns;\r\n                    return _old_paint.call(this, gc, config);\r\n                };\r\n\r\n                this.grid.addProperties(grid_properties);\r\n                this.grid.addProperties(styles[\"\"]);\r\n\r\n                set_formatters(this.grid);\r\n                set_editors(this.grid);\r\n\r\n                // Add tree cell renderer\r\n                this.grid.cellRenderers.add(\"TreeCell\", Base.extend({paint: treeLineRendererPaint}));\r\n\r\n                if (this._hg_data) {\r\n                    this.grid.behavior.setPSP(this._hg_data);\r\n                    delete this._hgdata;\r\n                }\r\n            }\r\n        }\r\n    }\r\n);\r\n\r\nconst HYPERGRID_INSTANCE = Symbol(\"Hypergrid private\");\r\n\r\nasync function grid_update(div, view, task) {\r\n    const nrows = await view.num_rows();\r\n    if (task.cancelled) {\r\n        return;\r\n    }\r\n    const hypergrid = get_hypergrid.call(this);\r\n    if (!hypergrid) {\r\n        return;\r\n    }\r\n    const dataModel = hypergrid.behavior.dataModel;\r\n    dataModel._view = view;\r\n    dataModel._table = this._table;\r\n    dataModel.setDirty(nrows);\r\n    hypergrid.behaviorChanged();\r\n    hypergrid.canvas.paintNow();\r\n}\r\n\r\nfunction style_element() {\r\n    if (this[HYPERGRID_INSTANCE]) {\r\n        const element = this[HYPERGRID_INSTANCE];\r\n        clear_styles(element);\r\n        const styles = get_styles(element);\r\n        if (element.grid) {\r\n            element.grid.addProperties(styles[\"\"]);\r\n        }\r\n        element.grid.behavior.createColumns();\r\n        element.grid.canvas.paintNow();\r\n    }\r\n}\r\n\r\nfunction get_hypergrid() {\r\n    return this[HYPERGRID_INSTANCE] ? this[HYPERGRID_INSTANCE].grid : undefined;\r\n}\r\n\r\n/**\r\n * Create a new <perspective-hypergrid> web component, and attach it to the DOM.\r\n *\r\n * @param {HTMLElement} div Attachment point.\r\n */\r\nasync function getOrCreateHypergrid(div) {\r\n    let perspectiveHypergridElement;\r\n    if (!get_hypergrid.call(this)) {\r\n        perspectiveHypergridElement = this[HYPERGRID_INSTANCE] = document.createElement(\"perspective-hypergrid\");\r\n        perspectiveHypergridElement.setAttribute(\"tabindex\", 1);\r\n        perspectiveHypergridElement.addEventListener(\"blur\", () => {\r\n            if (perspectiveHypergridElement.grid && !perspectiveHypergridElement.grid._is_editing) {\r\n                perspectiveHypergridElement.grid.selectionModel.clear(true); //keepRowSelections = true\r\n                perspectiveHypergridElement.grid.paintNow();\r\n            }\r\n        });\r\n    } else {\r\n        perspectiveHypergridElement = this[HYPERGRID_INSTANCE];\r\n    }\r\n\r\n    if (!perspectiveHypergridElement.isConnected) {\r\n        div.innerHTML = \"\";\r\n        div.appendChild(perspectiveHypergridElement);\r\n        await new Promise(resolve => setTimeout(resolve));\r\n        perspectiveHypergridElement.grid.canvas.resize(false);\r\n    }\r\n    return perspectiveHypergridElement;\r\n}\r\n\r\nfunction suppress_paint(hypergrid, f) {\r\n    const canvas = hypergrid.divCanvas;\r\n    hypergrid.divCanvas = undefined;\r\n    f();\r\n    hypergrid.divCanvas = canvas;\r\n}\r\n\r\nasync function grid_create(div, view, task, max_rows, max_cols, force) {\r\n    let hypergrid = get_hypergrid.call(this);\r\n    if (hypergrid) {\r\n        hypergrid.behavior.dataModel._view = undefined;\r\n        hypergrid.behavior.dataModel._table = undefined;\r\n        suppress_paint(hypergrid, () => hypergrid.allowEvents(false));\r\n    }\r\n\r\n    const config = await view.get_config();\r\n\r\n    if (task.cancelled) {\r\n        return;\r\n    }\r\n    const colPivots = config.column_pivots;\r\n    const rowPivots = config.row_pivots;\r\n    const data_window = {\r\n        start_row: 0,\r\n        end_row: 1,\r\n        id: rowPivots.length === 0 && colPivots.length === 0\r\n    };\r\n\r\n    const [nrows, json, schema, tschema, all_columns] = await Promise.all([view.num_rows(), view.to_columns(data_window), view.schema(), this._table.schema(), view.column_paths()]);\r\n\r\n    if (task.cancelled) {\r\n        return;\r\n    }\r\n\r\n    let perspectiveHypergridElement = await getOrCreateHypergrid.call(this, div);\r\n    hypergrid = get_hypergrid.call(this);\r\n\r\n    if (task.cancelled) {\r\n        return;\r\n    }\r\n\r\n    const columns = all_columns.filter(x => x !== \"__INDEX__\");\r\n    const dataModel = hypergrid.behavior.dataModel;\r\n    dataModel._grid = hypergrid;\r\n\r\n    dataModel.setIsTree(rowPivots.length > 0);\r\n    dataModel.setDirty(nrows);\r\n    dataModel.clearSelectionState();\r\n    dataModel._view = view;\r\n    dataModel._table = this._table;\r\n    dataModel._config = config;\r\n    dataModel._viewer = this;\r\n    dataModel._columns = columns;\r\n    dataModel._pad_window = this.hasAttribute(\"settings\");\r\n\r\n    hypergrid.renderer.needsComputeCellsBounds = true;\r\n    suppress_paint(hypergrid, () => perspectiveHypergridElement.set_data(json, schema, tschema, rowPivots, columns, force));\r\n    if (hypergrid.behavior.dataModel._outstanding) {\r\n        await hypergrid.behavior.dataModel._outstanding.req;\r\n    }\r\n\r\n    if (this._plugin_config) {\r\n        suppress_paint(hypergrid, () => dataModel.setSelectedRowID(this._plugin_config.selected));\r\n        delete this._plugin_config;\r\n    }\r\n\r\n    await hypergrid.canvas.resize(true);\r\n    hypergrid.allowEvents(true);\r\n}\r\n\r\nconst plugin = {\r\n    name: \"Grid\",\r\n    create: grid_create,\r\n    selectMode: \"toggle\",\r\n    update: grid_update,\r\n    deselectMode: \"pivots\",\r\n    styleElement: style_element,\r\n    save: function() {\r\n        const hypergrid = get_hypergrid.call(this);\r\n        if (hypergrid && hypergrid.selectionModel.hasRowSelections()) {\r\n            return {selected: hypergrid.behavior.dataModel.getSelectedRowID()};\r\n        }\r\n    },\r\n    restore: function(config) {\r\n        this._plugin_config = config;\r\n    },\r\n    resize: async function() {\r\n        const hypergrid = get_hypergrid.call(this);\r\n        if (hypergrid) {\r\n            let nrows = await this._view.num_rows();\r\n            hypergrid.behavior.dataModel.setDirty(nrows);\r\n            await hypergrid.canvas.resize(true);\r\n        }\r\n    },\r\n    delete: function() {\r\n        const hypergrid = get_hypergrid.call(this);\r\n        if (hypergrid) {\r\n            hypergrid.terminate();\r\n            hypergrid.div = undefined;\r\n            hypergrid.canvas.div = undefined;\r\n            hypergrid.canvas.canvas = undefined;\r\n            hypergrid.sbVScroller = undefined;\r\n            hypergrid.sbHScroller = undefined;\r\n            delete this[HYPERGRID_INSTANCE];\r\n        }\r\n    }\r\n};\r\n\r\nregisterPlugin(\"hypergrid\", plugin);\r\n"],"file":"hypergrid.js"}