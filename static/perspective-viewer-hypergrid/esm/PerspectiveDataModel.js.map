{"version":3,"sources":["../../src/js/PerspectiveDataModel.js"],"names":["Behavior","get_type_config","page2hypergrid","prototype","treeColumnIndex","TREE_COLUMN_INDEX","get_rect","nrows","dataWindow","dw","grid","newRectangle","left","top","width","Math","min","height","find_row","rows","index","ridx","__ID__","parseInt","_wrapper","f","_","resolve","is_error","call","e","pad_data_window","rect","rowPivots","selection","range","start_row","origin","y","end_row","corner","start_col","x","end_col","length","id","require","extend","isTreeCol","isTree","getValue","row","data","getRowCount","_nrows","getConfig","_config","setRowCount","count","_isTree","setIsTree","setDirty","_grid","synchronizeScrollingBoundaries","_dirty","toggleRow","col","event","isShift","primitiveEvent","detail","shiftKey","is_expanded","_view","get_row_expanded","rowPath","collapse","set_depth","expand","num_rows","canvas","paintNow","_update_select_index","has_cell_selections","selectionModel","hasSelections","has_row_selections","hasRowSelections","row_data","getLastSelection","_selected_cell_index","getSelectedRows","_selected_row_index","_update_editor","editor","cellEditor","new_index","_index","resetGridXY","dataCell","moveEditor","_update_selection","select","clearRowSelection","row_index","selectRow","getSelectedRowID","setSelectedRowID","properties","rowSelection","pspFetch","selection_enabled","_viewer","hasAttribute","row_pivots","next_page","to_columns","_columns","base","forEach","offset","fetchData","undefined","renderer","is_cache_miss","_data_window","needsComputeCellsBounds","_outstanding","req","ret","getCellEditorAt","columnIndex","rowIndex","declaredEditorName","options","cellEditors","create","el","addEventListener","setTimeout","cancelEditing","args","_row","to_json","_table","_data","_canvas","getCell","config","rendererName","nextRow","depthDelta","isUserDataArea","cellStyle","value","getRow","last","expanded","_type","schema","type","cellRenderers","get","clearSelectionState","clear","cache","gridCellConfig","type_config","indexOf","isNaN","color","columnColorNumberPositive","backgroundColor","columnBackgroundColorNumberPositive","borderBottom","borderBottomPositive","borderRight","borderRightPositive","columnColorNumberNegative","columnBackgroundColorNumberNegative","borderBottomNegative","borderRightNegative","String"],"mappings":"AAAA;;;;;;;;AASA,OAAOA,QAAP,MAAqB,uCAArB;AACA,SAAQC,eAAR,QAA8B,6CAA9B;AACA,SAAQC,cAAR,QAA6B,oBAA7B;AAEA,MAAM;AACFC,EAAAA,SAAS,EAAE;AAACC,IAAAA,eAAe,EAAEC;AAAlB;AADT,IAEFL,QAFJ;;AAIA,SAASM,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,MAAI,CAAC,KAAKC,UAAV,EAAsB;AAClB,WAAO,EAAP;AACH;;AACD,QAAMC,EAAE,GAAG,KAAKD,UAAhB;AACA,SAAO,KAAKE,IAAL,CAAUC,YAAV,CAAuBF,EAAE,CAACG,IAA1B,EAAgCH,EAAE,CAACI,GAAnC,EAAwCJ,EAAE,CAACK,KAA3C,EAAkDP,KAAK,GAAGQ,IAAI,CAACC,GAAL,CAAST,KAAK,GAAGE,EAAE,CAACI,GAApB,EAAyBJ,EAAE,CAACQ,MAA5B,CAAH,GAAyCR,EAAE,CAACQ,MAAnG,CAAP,CALqB,CAK8F;AACtH;;AAED,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,KAAxB,EAA+B;AAC3B,OAAK,IAAIC,IAAT,IAAiBF,IAAjB,EAAuB;AACnB,QAAIA,IAAI,CAACE,IAAD,CAAJ,CAAWC,MAAX,KAAsBF,KAA1B,EAAiC;AAC7B,aAAOG,QAAQ,CAACF,IAAD,CAAf;AACH;AACJ;;AACD,SAAO,CAAC,CAAR;AACH;;AAED,MAAMG,QAAQ,GAAG,UAASC,CAAT,EAAY;AACzB,SAAO,gBAAeC,CAAf,EAAkBC,OAAlB,EAA2B;AAC9B,QAAIC,QAAJ;;AACA,QAAI;AACAA,MAAAA,QAAQ,GAAG,MAAMH,CAAC,CAACI,IAAF,CAAO,IAAP,CAAjB;AACH,KAFD,CAEE,OAAOC,CAAP,EAAU;AACRH,MAAAA,OAAO,CAACG,CAAD,CAAP;AACA;AACH;;AACDH,IAAAA,OAAO,CAACC,QAAD,CAAP;AACH,GATD;AAUH,CAXD;;AAaA,SAASG,eAAT,CAAyBC,IAAzB,EAA+BC,SAAS,GAAG,EAA3C,EAA+CC,SAAS,GAAG,KAA3D,EAAkE;AAC9D,QAAMC,KAAK,GAAG;AACVC,IAAAA,SAAS,EAAEJ,IAAI,CAACK,MAAL,CAAYC,CADb;AAEVC,IAAAA,OAAO,EAAEP,IAAI,CAACQ,MAAL,CAAYF,CAAZ,GAAgB,CAFf;AAGVG,IAAAA,SAAS,EAAET,IAAI,CAACK,MAAL,CAAYK,CAHb;AAIVC,IAAAA,OAAO,EAAEX,IAAI,CAACQ,MAAL,CAAYE,CAAZ,GAAgB;AAJf,GAAd;AAMAP,EAAAA,KAAK,CAACQ,OAAN,IAAiBV,SAAS,IAAIA,SAAS,CAACW,MAAV,GAAmB,CAAhC,GAAoC,CAApC,GAAwC,CAAzD;AACAT,EAAAA,KAAK,CAACU,EAAN,GAAWX,SAAX;AACA,SAAOC,KAAP;AACH;;AAED,eAAeW,OAAO,CAAC,gBAAD,CAAP,CAA0BC,MAA1B,CAAiC,sBAAjC,EAAyD;AACpEC,EAAAA,SAAS,EAAE,UAASN,CAAT,EAAY;AACnB,WAAOA,CAAC,KAAKrC,iBAAN,IAA2B,KAAK4C,MAAL,EAAlC;AACH,GAHmE;AAKpEC,EAAAA,QAAQ,EAAE,UAASR,CAAT,EAAYJ,CAAZ,EAAe;AACrB,QAAIa,GAAG,GAAG,KAAKC,IAAL,CAAUd,CAAV,CAAV;AACA,WAAOa,GAAG,GAAGA,GAAG,CAACT,CAAD,CAAN,GAAY,IAAtB;AACH,GARmE;AAUpEW,EAAAA,WAAW,EAAE,YAAW;AACpB,WAAO,KAAKC,MAAL,IAAe,CAAtB;AACH,GAZmE;AAcpEC,EAAAA,SAAS,EAAE,YAAW;AAClB,WAAO,KAAKC,OAAZ;AACH,GAhBmE;AAkBpEC,EAAAA,WAAW,EAAE,UAASC,KAAT,EAAgB;AACzB,SAAKJ,MAAL,GAAcI,KAAK,IAAI,CAAvB;AACH,GApBmE;AAsBpET,EAAAA,MAAM,EAAE,YAAW;AACf,WAAO,KAAKU,OAAZ;AACH,GAxBmE;AA0BpEC,EAAAA,SAAS,EAAE,UAASX,MAAT,EAAiB;AACxB,SAAKU,OAAL,GAAeV,MAAf;AACH,GA5BmE;AA8BpEY,EAAAA,QAAQ,EAAE,UAAStD,KAAT,EAAgB;AACtB,QAAI,CAAC,KAAKuD,KAAV,EAAiB;AACb;AACH;;AACD,QAAIvD,KAAK,KAAK,KAAK+C,MAAnB,EAA2B;AACvB,WAAKA,MAAL,GAAc/C,KAAd;;AACA,WAAKuD,KAAL,CAAWC,8BAAX;AACH;;AACD,SAAKC,MAAL,GAAc,IAAd;AACH,GAvCmE;AAyCpE;AACAC,EAAAA,SAAS,EAAE,gBAAed,GAAf,EAAoBe,GAApB,EAAyBC,KAAzB,EAAgC;AACvC,QAAI,KAAKnB,SAAL,CAAekB,GAAf,CAAJ,EAAyB;AACrB,UAAIE,OAAO,GAAG,KAAd;;AACA,UAAID,KAAK,CAACE,cAAN,CAAqBC,MAArB,CAA4BD,cAAhC,EAAgD;AAC5CD,QAAAA,OAAO,GAAG,CAAC,CAACD,KAAK,CAACE,cAAN,CAAqBC,MAArB,CAA4BD,cAA5B,CAA2CE,QAAvD,CAD4C,CACqB;AACpE;;AACD,UAAIC,WAAW,GAAG,MAAM,KAAKC,KAAL,CAAWC,gBAAX,CAA4BvB,GAA5B,CAAxB;;AACA,UAAIiB,OAAJ,EAAa;AACT,YAAII,WAAJ,EAAiB;AACb,cAAI,KAAKpB,IAAL,CAAUD,GAAV,EAAee,GAAf,EAAoBS,OAApB,CAA4B/B,MAA5B,KAAuC,CAA3C,EAA8C;AAC1C,iBAAK6B,KAAL,CAAWG,QAAX,CAAoBzB,GAApB;AACH,WAFD,MAEO;AACH,iBAAKsB,KAAL,CAAWI,SAAX,CAAqB,KAAKzB,IAAL,CAAUD,GAAV,EAAee,GAAf,EAAoBS,OAApB,CAA4B/B,MAA5B,GAAqC,CAA1D;AACH;AACJ,SAND,MAMO;AACH,eAAK6B,KAAL,CAAWI,SAAX,CAAqB,KAAKzB,IAAL,CAAUD,GAAV,EAAee,GAAf,EAAoBS,OAApB,CAA4B/B,MAA5B,GAAqC,CAA1D;AACH;AACJ,OAVD,MAUO;AACH,YAAI4B,WAAJ,EAAiB;AACb,eAAKC,KAAL,CAAWG,QAAX,CAAoBzB,GAApB;AACH,SAFD,MAEO;AACH,eAAKsB,KAAL,CAAWK,MAAX,CAAkB3B,GAAlB;AACH;AACJ;;AACD,UAAI5C,KAAK,GAAG,MAAM,KAAKkE,KAAL,CAAWM,QAAX,EAAlB;AACA,WAAKlB,QAAL,CAActD,KAAd;;AACA,WAAKuD,KAAL,CAAWkB,MAAX,CAAkBC,QAAlB;AACH;AACJ,GAtEmE;AAwEpEC,EAAAA,oBAAoB,EAAE,YAAW;AAC7B,UAAMC,mBAAmB,GAAG,KAAKrB,KAAL,CAAWsB,cAAX,CAA0BC,aAA1B,EAA5B;;AACA,UAAMC,kBAAkB,GAAG,KAAKxB,KAAL,CAAWsB,cAAX,CAA0BG,gBAA1B,EAA3B;;AACA,QAAIJ,mBAAJ,EAAyB;AACrB,YAAMK,QAAQ,GAAG,KAAKpC,IAAL,CAAU,KAAKU,KAAL,CAAWsB,cAAX,CAA0BK,gBAA1B,GAA6CpD,MAA7C,CAAoDC,CAA9D,CAAjB;;AACA,UAAIkD,QAAJ,EAAc;AACV,aAAKE,oBAAL,GAA4BF,QAAQ,CAAClE,MAArC;AACH;AACJ;;AACD,QAAIgE,kBAAJ,EAAwB;AACpB,YAAME,QAAQ,GAAG,KAAKpC,IAAL,CAAU,KAAKU,KAAL,CAAW6B,eAAX,GAA6B,CAA7B,CAAV,CAAjB;;AACA,UAAIH,QAAJ,EAAc;AACV,aAAKI,mBAAL,GAA2BJ,QAAQ,CAAClE,MAApC;AACH;AACJ;AACJ,GAvFmE;AAyFpEuE,EAAAA,cAAc,EAAE,UAAS7D,IAAT,EAAe;AAC3B,UAAM8D,MAAM,GAAG,KAAKhC,KAAL,CAAWiC,UAA1B;AACA,QAAIC,SAAJ;;AACA,QAAIF,MAAJ,EAAY;AACRE,MAAAA,SAAS,GAAG9E,QAAQ,CAAC,KAAKkC,IAAN,EAAY0C,MAAM,CAACG,MAAnB,CAApB;AACAH,MAAAA,MAAM,CAAC3B,KAAP,CAAa+B,WAAb,CAAyBJ,MAAM,CAAC3B,KAAP,CAAagC,QAAb,CAAsBzD,CAA/C,EAAkDsD,SAAS,GAAGhE,IAAI,CAACK,MAAL,CAAYC,CAAxB,GAA4B,CAA9E;AACAwD,MAAAA,MAAM,CAACM,UAAP;AACH;;AACD,WAAOJ,SAAP;AACH,GAlGmE;AAoGpEK,EAAAA,iBAAiB,EAAE,UAASL,SAAT,EAAoB;AACnC,UAAMb,mBAAmB,GAAG,KAAKrB,KAAL,CAAWsB,cAAX,CAA0BC,aAA1B,EAA5B;;AACA,QAAIF,mBAAJ,EAAyB;AACrBa,MAAAA,SAAS,GAAGA,SAAS,IAAI9E,QAAQ,CAAC,KAAKkC,IAAN,EAAY,KAAKsC,oBAAjB,CAAjC;;AACA,UAAIM,SAAS,KAAK,CAAC,CAAnB,EAAsB;AAClB,cAAM9B,GAAG,GAAG,KAAKJ,KAAL,CAAWsB,cAAX,CAA0BK,gBAA1B,GAA6CpD,MAA7C,CAAoDK,CAAhE;;AACA,aAAKoB,KAAL,CAAWsB,cAAX,CAA0BkB,MAA1B,CAAiCpC,GAAjC,EAAsC8B,SAAtC,EAAiD,CAAjD,EAAoD,CAApD;AACH;AACJ;;AACD,QAAI,KAAKJ,mBAAT,EAA8B;AAC1B,WAAK9B,KAAL,CAAWsB,cAAX,CAA0BmB,iBAA1B;;AACA,YAAMC,SAAS,GAAGR,SAAS,IAAI9E,QAAQ,CAAC,KAAKkC,IAAN,EAAY,KAAKwC,mBAAjB,CAAvC;;AACA,UAAIY,SAAS,KAAK,CAAC,CAAnB,EAAsB;AAClB,aAAK1C,KAAL,CAAWsB,cAAX,CAA0BqB,SAA1B,CAAoCD,SAApC;AACH;AACJ;AACJ,GApHmE;;AAsHpEE,EAAAA,gBAAgB,GAAG;AACf,QAAI,KAAK5C,KAAL,CAAWsB,cAAX,CAA0BG,gBAA1B,EAAJ,EAAkD;AAC9C,YAAMC,QAAQ,GAAG,KAAKpC,IAAL,CAAU,KAAKU,KAAL,CAAW6B,eAAX,GAA6B,CAA7B,CAAV,CAAjB;;AACA,UAAIH,QAAJ,EAAc;AACV,eAAOA,QAAQ,CAAClE,MAAhB;AACH;AACJ;AACJ,GA7HmE;;AA+HpEqF,EAAAA,gBAAgB,CAACvF,KAAD,EAAQ;AACpB,QAAI,KAAK0C,KAAL,CAAW8C,UAAX,CAAsBC,YAA1B,EAAwC;AACpC,WAAKjB,mBAAL,GAA2BxE,KAA3B;;AACA,WAAKiF,iBAAL;AACH;AACJ,GApImE;;AAsIpES,EAAAA,QAAQ,EAAE,gBAAe9E,IAAf,EAAqB;AAC3B,UAAM+E,iBAAiB,GAAG,KAAKjD,KAAL,CAAW8C,UAAX,CAAsBC,YAAtB,IAAsC,KAAKG,OAAL,CAAaC,YAAb,CAA0B,UAA1B,CAAhE;;AACA,UAAM9E,KAAK,GAAGJ,eAAe,CAACC,IAAD,EAAO,KAAKwB,OAAL,CAAa0D,UAApB,EAAgCH,iBAAhC,CAA7B;AACA,UAAMI,SAAS,GAAG,MAAM,KAAK1C,KAAL,CAAW2C,UAAX,CAAsBjF,KAAtB,CAAxB;AACA,SAAKiB,IAAL,GAAY,EAAZ;AACA,UAAMjC,IAAI,GAAGjB,cAAc,CAACiH,SAAD,EAAY,KAAK3D,OAAL,CAAa0D,UAAzB,EAAqC,KAAKG,QAA1C,CAA3B;AACA,UAAMC,IAAI,GAAGnF,KAAK,CAACC,SAAnB;AACA,UAAMgB,IAAI,GAAG,KAAKA,IAAlB;AACAjC,IAAAA,IAAI,CAACoG,OAAL,CAAa,CAACpE,GAAD,EAAMqE,MAAN,KAAkBpE,IAAI,CAACkE,IAAI,GAAGE,MAAR,CAAJ,GAAsBrE,GAArD;AACH,GA/ImE;AAiJpEsE,EAAAA,SAAS,EAAEjG,QAAQ,CAAC,kBAAiB;AACjC,QAAI,KAAKiD,KAAL,KAAeiD,SAAnB,EAA8B;AAC1B,aAAO,IAAP;AACH;;AAED,QAAI1F,IAAI,GAAG1B,QAAQ,CAACuB,IAAT,CAAc,KAAKiC,KAAL,CAAW6D,QAAzB,CAAX;;AAEA,QAAI,CAAC,KAAK3D,MAAN,IAAgB,CAAC4D,aAAa,CAAC5F,IAAD,EAAO,KAAK6F,YAAZ,CAAlC,EAA6D;AACzD;AACH;;AAED,SAAK/D,KAAL,CAAW6D,QAAX,CAAoBG,uBAApB,GAA8C,IAA9C;;AAEA,QAAI,KAAKC,YAAL,IAAqB,CAACH,aAAa,CAAC5F,IAAD,EAAO,KAAK+F,YAAL,CAAkB/F,IAAzB,CAAvC,EAAuE;AACnE,YAAM,KAAK+F,YAAL,CAAkBC,GAAxB;AACA,WAAKlE,KAAL,CAAW6D,QAAX,CAAoBG,uBAApB,GAA8C,IAA9C;AACA,aAAO,IAAP;AACH;;AAED,SAAK9D,MAAL,GAAc,KAAd;AACA,UAAMgE,GAAG,GAAG,KAAKlB,QAAL,CAAc9E,IAAd,CAAZ;AACA,SAAK+F,YAAL,GAAoB;AAAC/F,MAAAA,IAAD;AAAOgG,MAAAA;AAAP,KAApB;;AACA,SAAK9C,oBAAL;;AAEA,QAAI;AACA,YAAM8C,GAAN;AACH,KAFD,SAEU;AACN,WAAKD,YAAL,GAAoBL,SAApB;AACA,WAAK5D,KAAL,CAAW6D,QAAX,CAAoBG,uBAApB,GAA8C,IAA9C;AACH;;AAED,SAAKD,YAAL,GAAoB7F,IAApB;;AACA,SAAKqE,iBAAL,CAAuB,KAAKR,cAAL,CAAoB7D,IAApB,CAAvB;;AAEAA,IAAAA,IAAI,GAAG1B,QAAQ,CAACuB,IAAT,CAAc,KAAKiC,KAAL,CAAW6D,QAAzB,CAAP;AACA,UAAMM,GAAG,GAAGL,aAAa,CAAC5F,IAAD,EAAO,KAAK6F,YAAZ,CAAzB;AACA,WAAOI,GAAP;AACH,GArCkB,CAjJiD;AAwLpEC,EAAAA,eAAe,EAAE,UAASC,WAAT,EAAsBC,QAAtB,EAAgCC,kBAAhC,EAAoDC,OAApD,EAA6D;AAC1E,QAAI,CAACD,kBAAL,EAAyB;AACrB;AACH;;AACD,UAAMb,MAAM,GAAG,KAAK1D,KAAL,CAAW6D,QAAX,CAAoBnH,UAApB,CAA+BK,GAA9C;;AACA,UAAMiF,MAAM,GAAG,KAAKhC,KAAL,CAAWyE,WAAX,CAAuBC,MAAvB,CAA8BH,kBAA9B,EAAkDC,OAAlD,CAAf;;AACA,SAAKxE,KAAL,CAAWsB,cAAX,CAA0BkB,MAA1B,CAAiC6B,WAAjC,EAA8CC,QAAQ,GAAGZ,MAAX,GAAoB,CAAlE;;AACA1B,IAAAA,MAAM,CAAC2C,EAAP,CAAUC,gBAAV,CAA2B,MAA3B,EAAmC,MAAMC,UAAU,CAAC,MAAM7C,MAAM,CAAC8C,aAAP,EAAP,CAAnD;AACA,UAAMC,IAAI,GAAG;AACTzG,MAAAA,SAAS,EAAEgG,QAAQ,GAAGZ,MAAX,GAAoB,CADtB;AAETjF,MAAAA,OAAO,EAAE6F,QAAQ,GAAGZ,MAFX;AAGT/E,MAAAA,SAAS,EAAE0F,WAHF;AAITxF,MAAAA,OAAO,EAAEwF,WAAW,GAAG,CAJd;AAKT/G,MAAAA,KAAK,EAAE;AALE,KAAb;AAOA0E,IAAAA,MAAM,CAACgD,IAAP,GAAc,KAAKrE,KAAL,CAAWsE,OAAX,CAAmBF,IAAnB,CAAd;AACA/C,IAAAA,MAAM,CAACkD,MAAP,GAAgB,KAAKA,MAArB;AACAlD,IAAAA,MAAM,CAACmD,KAAP,GAAe,KAAK7F,IAApB;AACA0C,IAAAA,MAAM,CAACoD,OAAP,GAAiB,KAAKpF,KAAL,CAAWkB,MAAX,CAAkBA,MAAnC;AACAc,IAAAA,MAAM,CAACG,MAAP,GAAgB,KAAK7C,IAAL,CAAUgF,QAAQ,GAAGZ,MAAX,GAAoB,CAA9B,EAAiClG,MAAjD;AACA,WAAOwE,MAAP;AACH,GA7MmE;AA+MpEqD,EAAAA,OAAO,EAAE,UAASC,MAAT,EAAiBC,YAAjB,EAA+B;AACpC,QAAIC,OAAJ,EAAaC,UAAb;;AACA,QAAIH,MAAM,CAACI,cAAX,EAA2B;AACvBC,MAAAA,SAAS,CAAC5H,IAAV,CAAe,IAAf,EAAqBuH,MAArB,EAA6BC,YAA7B;AACH,KAFD,MAEO,IAAID,MAAM,CAACjD,QAAP,CAAgBzD,CAAhB,KAAsBrC,iBAAtB,IAA2C+I,MAAM,CAACM,KAAtD,EAA6D;AAChEJ,MAAAA,OAAO,GAAG,KAAKK,MAAL,CAAYP,MAAM,CAACjD,QAAP,CAAgB7D,CAAhB,GAAoB,CAAhC,CAAV;AACAiH,MAAAA,UAAU,GAAGD,OAAO,GAAGF,MAAM,CAACM,KAAP,CAAa/E,OAAb,CAAqB/B,MAArB,GAA8B0G,OAAO,CAACjJ,iBAAD,CAAP,CAA2BsE,OAA3B,CAAmC/B,MAApE,GAA6E,CAAjG;AACAwG,MAAAA,MAAM,CAACQ,IAAP,GAAcL,UAAU,KAAK,CAA7B;AACAH,MAAAA,MAAM,CAACS,QAAP,GAAkBN,UAAU,GAAG,CAA/B;AACAH,MAAAA,MAAM,CAACU,KAAP,GAAe,KAAKC,MAAL,CAAY,CAAC,CAAb,EAAgBC,IAAhB,CAAqBZ,MAAM,CAACM,KAAP,CAAa/E,OAAb,CAAqB/B,MAArB,GAA8B,CAAnD,CAAf;AACH;;AACD,WAAOwG,MAAM,CAAC1I,IAAP,CAAYuJ,aAAZ,CAA0BC,GAA1B,CAA8Bb,YAA9B,CAAP;AACH,GA3NmE;AA6NpEc,EAAAA,mBAAmB,EAAE,YAAW;AAC5B,SAAKvE,mBAAL,GAA2B8B,SAA3B;AACA,SAAKhC,oBAAL,GAA4BgC,SAA5B;;AACA,SAAK5D,KAAL,CAAWsB,cAAX,CAA0BgF,KAA1B;AACH;AAjOmE,CAAzD,CAAf;;AAoOA,SAASxC,aAAT,CAAuBI,GAAvB,EAA4BqC,KAA5B,EAAmC;AAC/B,SAAO,CAACA,KAAD,IAAUrC,GAAG,CAACnH,GAAJ,KAAYwJ,KAAK,CAACxJ,GAA5B,IAAmCmH,GAAG,CAACnH,GAAJ,GAAUmH,GAAG,CAAC/G,MAAd,KAAyBoJ,KAAK,CAACxJ,GAAN,GAAYwJ,KAAK,CAACpJ,MAA9E,IAAwF+G,GAAG,CAACpH,IAAJ,KAAayJ,KAAK,CAACzJ,IAA3G,IAAmHoH,GAAG,CAACpH,IAAJ,GAAWoH,GAAG,CAAClH,KAAf,KAAyBuJ,KAAK,CAACzJ,IAAN,GAAayJ,KAAK,CAACvJ,KAAtK;AACH;;AAED,SAAS2I,SAAT,CAAmBa,cAAnB,EAAmC;AAC/B,MAAIA,cAAc,CAACZ,KAAf,KAAyB,IAAzB,IAAiCY,cAAc,CAACZ,KAAf,KAAyBhC,SAA9D,EAAyE;AACrE4C,IAAAA,cAAc,CAACZ,KAAf,GAAuB,GAAvB;AACH,GAFD,MAEO;AACH,QAAIM,IAAI,GAAG,KAAKD,MAAL,CAAYO,cAAc,CAACnE,QAAf,CAAwBzD,CAApC,EAAuCsH,IAAlD;AACA,UAAMO,WAAW,GAAGtK,eAAe,CAAC+J,IAAD,CAAnC;;AACA,QAAIO,WAAW,CAACP,IAAhB,EAAsB;AAClBA,MAAAA,IAAI,GAAGO,WAAW,CAACP,IAAnB;AACH;;AACD,QAAI,CAAC,QAAD,EAAW,OAAX,EAAoB,SAApB,EAA+BQ,OAA/B,CAAuCR,IAAvC,IAA+C,CAAC,CAApD,EAAuD;AACnD,UAAIM,cAAc,CAACZ,KAAf,KAAyB,CAA7B,EAAgC;AAC5BY,QAAAA,cAAc,CAACZ,KAAf,GAAuBM,IAAI,KAAK,OAAT,GAAmB,MAAnB,GAA4B,GAAnD;AACH,OAFD,MAEO,IAAIS,KAAK,CAACH,cAAc,CAACZ,KAAhB,CAAT,EAAiC;AACpCY,QAAAA,cAAc,CAACZ,KAAf,GAAuB,GAAvB;AACH,OAFM,MAEA;AACH,YAAIY,cAAc,CAACZ,KAAf,GAAuB,CAA3B,EAA8B;AAC1BY,UAAAA,cAAc,CAACI,KAAf,GAAuBJ,cAAc,CAACK,yBAAf,IAA4C,kBAAnE;AACAL,UAAAA,cAAc,CAACM,eAAf,GAAiCN,cAAc,CAACO,mCAAf,GAAqDP,cAAc,CAACO,mCAApE,GAA0GP,cAAc,CAACM,eAA1J;AACAN,UAAAA,cAAc,CAACQ,YAAf,GAA8BR,cAAc,CAACS,oBAAf,GAAsCT,cAAc,CAACS,oBAArD,GAA4ET,cAAc,CAACQ,YAAzH;AACAR,UAAAA,cAAc,CAACU,WAAf,GAA6BV,cAAc,CAACW,mBAAf,GAAqCX,cAAc,CAACW,mBAApD,GAA0EX,cAAc,CAACU,WAAtH;AACH,SALD,MAKO;AACHV,UAAAA,cAAc,CAACI,KAAf,GAAuBJ,cAAc,CAACY,yBAAf,IAA4C,kBAAnE;AACAZ,UAAAA,cAAc,CAACM,eAAf,GAAiCN,cAAc,CAACa,mCAAf,GAAqDb,cAAc,CAACa,mCAApE,GAA0Gb,cAAc,CAACM,eAA1J;AACAN,UAAAA,cAAc,CAACQ,YAAf,GAA8BR,cAAc,CAACc,oBAAf,GAAsCd,cAAc,CAACc,oBAArD,GAA4Ed,cAAc,CAACQ,YAAzH;AACAR,UAAAA,cAAc,CAACU,WAAf,GAA6BV,cAAc,CAACe,mBAAf,GAAqCf,cAAc,CAACe,mBAApD,GAA0Ef,cAAc,CAACU,WAAtH;AACH;AACJ;AACJ,KAlBD,MAkBO,IAAIhB,IAAI,KAAK,SAAb,EAAwB;AAC3BM,MAAAA,cAAc,CAACZ,KAAf,GAAuB4B,MAAM,CAAChB,cAAc,CAACZ,KAAhB,CAA7B;AACH;AACJ;AACJ","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport Behavior from \"faux-hypergrid/src/behaviors/Behavior\";\nimport {get_type_config} from \"@finos/perspective/dist/esm/config/index.js\";\nimport {page2hypergrid} from \"./psp-to-hypergrid\";\n\nconst {\n    prototype: {treeColumnIndex: TREE_COLUMN_INDEX}\n} = Behavior;\n\nfunction get_rect(nrows) {\n    if (!this.dataWindow) {\n        return [];\n    }\n    const dw = this.dataWindow;\n    return this.grid.newRectangle(dw.left, dw.top, dw.width, nrows ? Math.min(nrows - dw.top, dw.height) : dw.height); // convert from InclusiveRect\n}\n\nfunction find_row(rows, index) {\n    for (let ridx in rows) {\n        if (rows[ridx].__ID__ === index) {\n            return parseInt(ridx);\n        }\n    }\n    return -1;\n}\n\nconst _wrapper = function(f) {\n    return async function(_, resolve) {\n        let is_error;\n        try {\n            is_error = await f.call(this);\n        } catch (e) {\n            resolve(e);\n            return;\n        }\n        resolve(is_error);\n    };\n};\n\nfunction pad_data_window(rect, rowPivots = [], selection = false) {\n    const range = {\n        start_row: rect.origin.y,\n        end_row: rect.corner.y + 1,\n        start_col: rect.origin.x,\n        end_col: rect.corner.x + 3\n    };\n    range.end_col += rowPivots && rowPivots.length > 0 ? 1 : 0;\n    range.id = selection;\n    return range;\n}\n\nexport default require(\"datasaur-local\").extend(\"PerspectiveDataModel\", {\n    isTreeCol: function(x) {\n        return x === TREE_COLUMN_INDEX && this.isTree();\n    },\n\n    getValue: function(x, y) {\n        var row = this.data[y];\n        return row ? row[x] : null;\n    },\n\n    getRowCount: function() {\n        return this._nrows || 0;\n    },\n\n    getConfig: function() {\n        return this._config;\n    },\n\n    setRowCount: function(count) {\n        this._nrows = count || 0;\n    },\n\n    isTree: function() {\n        return this._isTree;\n    },\n\n    setIsTree: function(isTree) {\n        this._isTree = isTree;\n    },\n\n    setDirty: function(nrows) {\n        if (!this._grid) {\n            return;\n        }\n        if (nrows !== this._nrows) {\n            this._nrows = nrows;\n            this._grid.synchronizeScrollingBoundaries();\n        }\n        this._dirty = true;\n    },\n\n    // Called when clicking on a row group expand\n    toggleRow: async function(row, col, event) {\n        if (this.isTreeCol(col)) {\n            let isShift = false;\n            if (event.primitiveEvent.detail.primitiveEvent) {\n                isShift = !!event.primitiveEvent.detail.primitiveEvent.shiftKey; // typecast to boolean\n            }\n            let is_expanded = await this._view.get_row_expanded(row);\n            if (isShift) {\n                if (is_expanded) {\n                    if (this.data[row][col].rowPath.length === 1) {\n                        this._view.collapse(row);\n                    } else {\n                        this._view.set_depth(this.data[row][col].rowPath.length - 2);\n                    }\n                } else {\n                    this._view.set_depth(this.data[row][col].rowPath.length - 1);\n                }\n            } else {\n                if (is_expanded) {\n                    this._view.collapse(row);\n                } else {\n                    this._view.expand(row);\n                }\n            }\n            let nrows = await this._view.num_rows();\n            this.setDirty(nrows);\n            this._grid.canvas.paintNow();\n        }\n    },\n\n    _update_select_index: function() {\n        const has_cell_selections = this._grid.selectionModel.hasSelections();\n        const has_row_selections = this._grid.selectionModel.hasRowSelections();\n        if (has_cell_selections) {\n            const row_data = this.data[this._grid.selectionModel.getLastSelection().origin.y];\n            if (row_data) {\n                this._selected_cell_index = row_data.__ID__;\n            }\n        }\n        if (has_row_selections) {\n            const row_data = this.data[this._grid.getSelectedRows()[0]];\n            if (row_data) {\n                this._selected_row_index = row_data.__ID__;\n            }\n        }\n    },\n\n    _update_editor: function(rect) {\n        const editor = this._grid.cellEditor;\n        let new_index;\n        if (editor) {\n            new_index = find_row(this.data, editor._index);\n            editor.event.resetGridXY(editor.event.dataCell.x, new_index - rect.origin.y + 1);\n            editor.moveEditor();\n        }\n        return new_index;\n    },\n\n    _update_selection: function(new_index) {\n        const has_cell_selections = this._grid.selectionModel.hasSelections();\n        if (has_cell_selections) {\n            new_index = new_index || find_row(this.data, this._selected_cell_index);\n            if (new_index !== -1) {\n                const col = this._grid.selectionModel.getLastSelection().origin.x;\n                this._grid.selectionModel.select(col, new_index, 0, 0);\n            }\n        }\n        if (this._selected_row_index) {\n            this._grid.selectionModel.clearRowSelection();\n            const row_index = new_index || find_row(this.data, this._selected_row_index);\n            if (row_index !== -1) {\n                this._grid.selectionModel.selectRow(row_index);\n            }\n        }\n    },\n\n    getSelectedRowID() {\n        if (this._grid.selectionModel.hasRowSelections()) {\n            const row_data = this.data[this._grid.getSelectedRows()[0]];\n            if (row_data) {\n                return row_data.__ID__;\n            }\n        }\n    },\n\n    setSelectedRowID(index) {\n        if (this._grid.properties.rowSelection) {\n            this._selected_row_index = index;\n            this._update_selection();\n        }\n    },\n\n    pspFetch: async function(rect) {\n        const selection_enabled = this._grid.properties.rowSelection || this._viewer.hasAttribute(\"editable\");\n        const range = pad_data_window(rect, this._config.row_pivots, selection_enabled);\n        const next_page = await this._view.to_columns(range);\n        this.data = [];\n        const rows = page2hypergrid(next_page, this._config.row_pivots, this._columns);\n        const base = range.start_row;\n        const data = this.data;\n        rows.forEach((row, offset) => (data[base + offset] = row));\n    },\n\n    fetchData: _wrapper(async function() {\n        if (this._view === undefined) {\n            return true;\n        }\n\n        let rect = get_rect.call(this._grid.renderer);\n\n        if (!this._dirty && !is_cache_miss(rect, this._data_window)) {\n            return;\n        }\n\n        this._grid.renderer.needsComputeCellsBounds = true;\n\n        if (this._outstanding && !is_cache_miss(rect, this._outstanding.rect)) {\n            await this._outstanding.req;\n            this._grid.renderer.needsComputeCellsBounds = true;\n            return true;\n        }\n\n        this._dirty = false;\n        const req = this.pspFetch(rect);\n        this._outstanding = {rect, req};\n        this._update_select_index();\n\n        try {\n            await req;\n        } finally {\n            this._outstanding = undefined;\n            this._grid.renderer.needsComputeCellsBounds = true;\n        }\n\n        this._data_window = rect;\n        this._update_selection(this._update_editor(rect));\n\n        rect = get_rect.call(this._grid.renderer);\n        const ret = is_cache_miss(rect, this._data_window);\n        return ret;\n    }),\n\n    getCellEditorAt: function(columnIndex, rowIndex, declaredEditorName, options) {\n        if (!declaredEditorName) {\n            return;\n        }\n        const offset = this._grid.renderer.dataWindow.top;\n        const editor = this._grid.cellEditors.create(declaredEditorName, options);\n        this._grid.selectionModel.select(columnIndex, rowIndex + offset - 1);\n        editor.el.addEventListener(\"blur\", () => setTimeout(() => editor.cancelEditing()));\n        const args = {\n            start_row: rowIndex + offset - 1,\n            end_row: rowIndex + offset,\n            start_col: columnIndex,\n            end_col: columnIndex + 1,\n            index: true\n        };\n        editor._row = this._view.to_json(args);\n        editor._table = this._table;\n        editor._data = this.data;\n        editor._canvas = this._grid.canvas.canvas;\n        editor._index = this.data[rowIndex + offset - 1].__ID__;\n        return editor;\n    },\n\n    getCell: function(config, rendererName) {\n        var nextRow, depthDelta;\n        if (config.isUserDataArea) {\n            cellStyle.call(this, config, rendererName);\n        } else if (config.dataCell.x === TREE_COLUMN_INDEX && config.value) {\n            nextRow = this.getRow(config.dataCell.y + 1);\n            depthDelta = nextRow ? config.value.rowPath.length - nextRow[TREE_COLUMN_INDEX].rowPath.length : 1;\n            config.last = depthDelta !== 0;\n            config.expanded = depthDelta < 0;\n            config._type = this.schema[-1].type[config.value.rowPath.length - 2];\n        }\n        return config.grid.cellRenderers.get(rendererName);\n    },\n\n    clearSelectionState: function() {\n        this._selected_row_index = undefined;\n        this._selected_cell_index = undefined;\n        this._grid.selectionModel.clear();\n    }\n});\n\nfunction is_cache_miss(req, cache) {\n    return !cache || req.top !== cache.top || req.top + req.height !== cache.top + cache.height || req.left !== cache.left || req.left + req.width !== cache.left + cache.width;\n}\n\nfunction cellStyle(gridCellConfig) {\n    if (gridCellConfig.value === null || gridCellConfig.value === undefined) {\n        gridCellConfig.value = \"-\";\n    } else {\n        let type = this.schema[gridCellConfig.dataCell.x].type;\n        const type_config = get_type_config(type);\n        if (type_config.type) {\n            type = type_config.type;\n        }\n        if ([\"number\", \"float\", \"integer\"].indexOf(type) > -1) {\n            if (gridCellConfig.value === 0) {\n                gridCellConfig.value = type === \"float\" ? \"0.00\" : \"0\";\n            } else if (isNaN(gridCellConfig.value)) {\n                gridCellConfig.value = \"-\";\n            } else {\n                if (gridCellConfig.value > 0) {\n                    gridCellConfig.color = gridCellConfig.columnColorNumberPositive || \"rgb(160,207,255)\";\n                    gridCellConfig.backgroundColor = gridCellConfig.columnBackgroundColorNumberPositive ? gridCellConfig.columnBackgroundColorNumberPositive : gridCellConfig.backgroundColor;\n                    gridCellConfig.borderBottom = gridCellConfig.borderBottomPositive ? gridCellConfig.borderBottomPositive : gridCellConfig.borderBottom;\n                    gridCellConfig.borderRight = gridCellConfig.borderRightPositive ? gridCellConfig.borderRightPositive : gridCellConfig.borderRight;\n                } else {\n                    gridCellConfig.color = gridCellConfig.columnColorNumberNegative || \"rgb(255,136,136)\";\n                    gridCellConfig.backgroundColor = gridCellConfig.columnBackgroundColorNumberNegative ? gridCellConfig.columnBackgroundColorNumberNegative : gridCellConfig.backgroundColor;\n                    gridCellConfig.borderBottom = gridCellConfig.borderBottomNegative ? gridCellConfig.borderBottomNegative : gridCellConfig.borderBottom;\n                    gridCellConfig.borderRight = gridCellConfig.borderRightNegative ? gridCellConfig.borderRightNegative : gridCellConfig.borderRight;\n                }\n            }\n        } else if (type === \"boolean\") {\n            gridCellConfig.value = String(gridCellConfig.value);\n        }\n    }\n}\n"],"file":"PerspectiveDataModel.js"}