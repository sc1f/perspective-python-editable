{"version":3,"sources":["webpack:///packages/perspective-viewer-hypergrid/webpack/universalModuleDefinition","webpack:///packages/perspective-viewer-hypergrid/webpack/bootstrap","webpack:///packages/perspective-viewer-hypergrid/external \"faux-hypergrid/src/lib/Canvas\"","webpack:///packages/perspective-viewer-hypergrid/external \"@finos/perspective-viewer/dist/esm/custom_styles\"","webpack:///packages/perspective-viewer-hypergrid/external \"faux-hypergrid/src/cellEditors/Textfield\"","webpack:///packages/perspective-viewer-hypergrid/external \"core-js/modules/web.dom-collections.iterator\"","webpack:///src/js/psp-to-hypergrid.js","webpack:///packages/perspective-viewer-hypergrid/external \"faux-hypergrid/src/behaviors/Behavior\"","webpack:///packages/perspective-viewer-hypergrid/external \"lodash/isEqual\"","webpack:///packages/perspective-viewer-hypergrid/external \"faux-hypergrid/src/cellRenderers\"","webpack:///packages/perspective-viewer-hypergrid/external \"@finos/perspective-viewer/dist/esm/utils.js\"","webpack:///packages/perspective-viewer-hypergrid/external \"lodash/cloneDeep\"","webpack:///packages/perspective-viewer-hypergrid/external \"@finos/perspective/dist/esm/config\"","webpack:///packages/perspective-viewer-hypergrid/external \"faux-hypergrid\"","webpack:///packages/perspective-viewer-hypergrid/external \"faux-hypergrid/src/Base\"","webpack:///packages/perspective-viewer-hypergrid/external \"fin-hypergrid-grouped-header-plugin\"","webpack:///packages/perspective-viewer-hypergrid/external \"rectangular\"","webpack:///packages/perspective-viewer-hypergrid/external \"superscript-number\"","webpack:///packages/perspective-viewer-hypergrid/external \"@finos/perspective/dist/esm/config/index.js\"","webpack:///packages/perspective-viewer-hypergrid/dist/html/hypergrid.html","webpack:///packages/perspective-viewer-hypergrid/dist/less/hypergrid.less","webpack:///src/js/formatters.js","webpack:///packages/perspective-viewer-hypergrid/external \"datasaur-local\"","webpack:///node_modules/css-loader/lib/css-base.js","webpack:///packages/perspective-viewer-hypergrid/external \"core-js/modules/es.string.replace\"","webpack:///src/js/perspective-plugin.js","webpack:///src/js/PerspectiveDataModel.js","webpack:///src/js/styles.js","webpack:///src/js/editors.js","webpack:///src/js/hypergrid-tree-cell-renderer.js","webpack:///src/js/hypergrid.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__5__","__WEBPACK_EXTERNAL_MODULE__6__","__WEBPACK_EXTERNAL_MODULE__7__","__WEBPACK_EXTERNAL_MODULE__8__","__WEBPACK_EXTERNAL_MODULE__9__","__WEBPACK_EXTERNAL_MODULE__10__","__WEBPACK_EXTERNAL_MODULE__11__","__WEBPACK_EXTERNAL_MODULE__12__","__WEBPACK_EXTERNAL_MODULE__13__","__WEBPACK_EXTERNAL_MODULE__14__","__WEBPACK_EXTERNAL_MODULE__15__","__WEBPACK_EXTERNAL_MODULE__16__","__WEBPACK_EXTERNAL_MODULE__20__","__WEBPACK_EXTERNAL_MODULE__22__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","COLUMN_SEPARATOR_STRING","TREE_COLUMN_INDEX","treeColumnIndex","page2hypergrid","data","row_pivots","columns","data_columns","keys","firstcol","length","undefined","is_tree","flat_columns","filter","x","data_indices","map","indexOf","rows","ridx","dataRow","cidx","columnName","rollup","rowPath","concat","isLeaf","__ID__","join","__INDEX__","push","psp2hypergrid","schema","tschema","columnPaths","row","split","isTree","configuration","rowPivots","columnTypes","col","null_formatter","formatter","null_value","old","format","val","custom_formatter","f","set_formatters","grid","formatters","type","get_types","config","get_type_config","format_function","float","localization","NumberFormatter","integer","datetime","DateFormatter","date","eval","add","header","behavior","formatColumnHeader","parse","useSourceMap","list","toString","this","item","content","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","sourceURLs","sources","source","sourceRoot","cssWithMappingToString","mediaQuery","alreadyImportedModules","id","Borders","cellRenderersRegistry","BaseClass","extend","paint","gc","color","bounds","y","w","width","h","height","save","translate","cache","lineWidth","borderTop","beginPath","moveTo","lineTo","strokeStyle","stroke","borderRight","borderBottom","borderLeft","restore","setPSP","payload","force","new_schema","forEach","columnPath","columnIndex","col_name","aliases","columnAliases","index","properties","showTreeColumn","dataModel","_config","selectable","column_pivots","_viewer","hasAttribute","addProperties","get_dynamic_styles","createColumns","refreshColumns","_memoized_schema","isEqual","slice","_memoized_pivots","sbVScroller","_data_window","sbHScroller","selectionModel","clear","setData","getPrototypeOf","setHeaders","schema_loaded","getActiveColumns","column","setColumnPropsByType","treeColumn","getTreeColumn","props","editor","string","assign","editable","editOnKeydown","editOnNextCell","editOnDoubleClick","editorActivationKeys","cellSelection","styles","get_styles","getConfig","sort","findIndex","trim","direction","charMap","superscript","sortColumn","event","preventDefault","handled","getColumn","detail","column_sorting","column_name","viewer","item_index","already_sorted","abs_sorting","shift_pressed","new_sort_direction","_increment_sort","splice","right_click_handler","e","old_event","primitiveEvent","new_event","MouseEvent","target","parentElement","dispatchEvent","async","getCellConfig","row_idx","col_idx","start_row","end_row","_view","to_json","row_pivots_values","__ROW_PATH__","row_filters","pivot","pivot_value","column_index","column_paths","result","column_filters","column_pivot_values","column_names","filters","install","updateCursor","cursor","getCursorAt","hoverCell","getHScrollValue","getVScrollValue","beCursor","asc","desc","addEventListener","selected","canvas","CustomEvent","bubbles","composed","rp_len","rowSelection","gridPoint","onMouseMove","featureChain","handleMouseMove","setCursor","cellClicked","dataCell","selected_rows","getSelectedRows","toggleRow","renderGrid","renderer","update_bounds","Math","floor","div","clientWidth","clientHeight","rectangular","Rectangle","component","setBounds","renderOverrides","renderLastSelection","shiftKey","stopPropagation","hasFocus","isConnected","grid_element","parentNode","host","activeElement","lookupFeature","handleMouseDown","dx","gridCell","dy","getCellProperty","isDataCell","isRightClick","dCell","newPoint","extendSelection","next","hasCTRL","mousePoint","getMouseDown","clearMostRecentSelection","popMouseDown","repaint","clearSelections","select","setMouseDown","setDragExtent","handleDOWN","cellEditor","count","getAutoScrollAcceleration","getLastSelection","origin","dataWindow","extent","min","getRowCount","handleUP","max","handleLEFT","handleRIGHT","moveShiftSelect","offsetX","offsetY","moveSingleSelect","resize","ratio","isHIDPI","devicePixelRatio","useHiDPI","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","render","start_time","performance","now","Error","Promise","setTimeout","computeCellsBounds","resolve","fetchData","buffer","style","bc","scale","useBitBlit","resizeNotification","needsComputeCellsBounds","paintNow","Behavior","get_rect","nrows","dw","newRectangle","left","top","find_row","parseInt","isTreeCol","getValue","_nrows","setRowCount","_isTree","setIsTree","setDirty","_grid","synchronizeScrollingBoundaries","_dirty","isShift","is_expanded","get_row_expanded","collapse","set_depth","expand","num_rows","_update_select_index","has_cell_selections","hasSelections","has_row_selections","hasRowSelections","row_data","_selected_cell_index","_selected_row_index","_update_editor","rect","new_index","_index","resetGridXY","moveEditor","_update_selection","clearRowSelection","row_index","selectRow","getSelectedRowID","setSelectedRowID","pspFetch","selection_enabled","range","selection","corner","start_col","end_col","pad_data_window","next_page","to_columns","_columns","base","offset","is_cache_miss","_outstanding","req","_","is_error","getCellEditorAt","rowIndex","declaredEditorName","options","cellEditors","el","cancelEditing","args","_row","_table","_data","_canvas","getCell","rendererName","nextRow","depthDelta","isUserDataArea","cellStyle","getRow","last","expanded","_type","cellRenderers","clearSelectionState","gridCellConfig","type_config","isNaN","columnColorNumberPositive","backgroundColor","columnBackgroundColorNumberPositive","borderBottomPositive","borderRightPositive","columnColorNumberNegative","columnBackgroundColorNumberNegative","borderBottomNegative","borderRightNegative","String","PropsBuilder","title","elem","get_properties","add_fonts","font","columnHeaderFont","columnHeaderForegroundSelectionFont","foregroundSelectionFont","treeHeaderForegroundSelectionFont","rowHeaderFont","treeHeaderFont","add_styles","treeHeaderBackgroundColor","treeHeaderColor","treeHeaderForegroundSelectionColor","treeHeaderBackgroundSelectionColor","backgroundSelectionColor","foregroundSelectionColor","columnHeaderBackgroundColor","columnHeaderSeparatorColor","columnHeaderColor","columnHeaderForegroundSelectionColor","selectionRegionOverlayColor","selectionRegionOutlineColor","gridLinesVColor","gridLinesHColor","lineColor","fixedLinesVColor","fixedLinesHColor","halign","columnHeaderHalign","hoverCellHighlight","enabled","add_measures","defaultRowHeight","groupedHeader","flatHeight","minimumColumnWidth","maximumColumnWidth","hoverRowHighlight","base_grid_properties","autoSelectRows","cellPadding","columnSelection","checkboxOnlyRowSelections","columnClip","columnHeaderBackgroundSelectionColor","columnsReorderable","enableContinuousRepaint","feedbackCount","fixedColumnCount","fixedRowCount","fixedLinesHWidth","fixedLinesVWidth","gridLinesH","gridLinesV","gridLinesUserDataArea","paintBackground","columnHeaderLines","groupConfig","headerTextWrapping","hoverColumnHighlight","noDataMessage","multipleSelections","renderFalsy","rowHeaderForegroundSelectionFont","rowResize","scrollbarHoverOff","rowHeaderCheckboxes","rowHeaderNumbers","showFilterRow","showHeaderRow","showRowNumbers","showCheckboxes","singleRowSelectionMode","sortColumns","sortOnDoubleClick","treeRenderer","vScrollbarClassPrefix","voffset","light_theme_overrides","dynamic_defaults","rowBackgroundSelectionColor","cellBackgroundSelectionColor","rowSelectionRegionOutlineColor","cellSelectionRegionOutlineColor","px","validateEditorValueDate","Date","setBoundsDate","cellBounds","setBoundsText","setEditorValueDate","day","getDate","month","getMonth","input","getFullYear","keydown","setEditorValueDatetime","hour","getHours","minute","getMinutes","ss","getSeconds","setEditorValueText","updated","mouseMoveEvent","document","createEvent","initMouseEvent","canBubble","cancelable","screenX","screenY","clientX","clientY","ctrlKey","altKye","metaKey","button","relatedTarget","localizer","getEditorValueText","then","colname","update","getEditorValueNumber","Number","replace","getEditorValueDate","saveEditorValue","initialValue","fireBeforeCellEdit","keyup","specialKeyup","stopped","cellProps","keyChar","getKeyChar","specialKeyups","keyCode","mappedNavKey","stopEditing","fireSyntheticEditorKeyUpEvent","feedback","str","error","validateEditorValue","getEditorValue","err","fireSyntheticEditorDataChangeEvent","errorEffectBegin","errors","hideEditor","_is_editing","remove","focus","setEditorValue","takeFocus","treeLineRendererPaint","minWidth","leaf","depth","parent","lastChild","isSelected","isRowHovered","isCellHovered","fillStyle","fillRect","fgColor","xOffset","globalAlpha","lineHeight","arc","PI","fill","closePath","textAlign","textBaseline","cellTextOffset","formatted_value","formatValue","getTextWidth","metrics","getTextWidthTruncated","yOffset","fillText","Canvas","stopResizeLoop","stopPaintLoop","bindTemplate","TEMPLATE","set_data","hg_data","_hg_data","connectedCallback","shadowRoot","querySelector","setAttribute","restartPaintLoop","Hypergrid","DataModel","PerspectiveDataModel","removeAttribute","get_style","grid_properties","cloneDeep","installPlugins","perspectivePlugin","groupedHeaderPlugin","_old_paint","items","GroupedHeader","visibleColumns","Textfield","template","selectAll","text","number","set_editors","Base","_hgdata","HYPERGRID_INSTANCE","get_hypergrid","getOrCreateHypergrid","perspectiveHypergridElement","createElement","innerHTML","appendChild","suppress_paint","hypergrid","divCanvas","plugin","view","task","max_rows","max_cols","allowEvents","get_config","cancelled","colPivots","data_window","json","all_columns","all","_pad_window","_plugin_config","selectMode","behaviorChanged","deselectMode","styleElement","element","clear_properties","delete","terminate","registerPlugin"],"mappings":"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","file":"perspective-viewer-hypergrid.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"faux-hypergrid/src/lib/Canvas\"), require(\"@finos/perspective-viewer/dist/esm/custom_styles\"), require(\"faux-hypergrid/src/cellEditors/Textfield\"), require(\"core-js/modules/web.dom-collections.iterator\"), require(\"faux-hypergrid/src/behaviors/Behavior\"), require(\"lodash/isEqual\"), require(\"faux-hypergrid/src/cellRenderers\"), require(\"@finos/perspective-viewer/dist/esm/utils.js\"), require(\"lodash/cloneDeep\"), require(\"@finos/perspective/dist/esm/config\"), require(\"faux-hypergrid\"), require(\"faux-hypergrid/src/Base\"), require(\"fin-hypergrid-grouped-header-plugin\"), require(\"rectangular\"), require(\"superscript-number\"), require(\"@finos/perspective/dist/esm/config/index.js\"), require(\"datasaur-local\"), require(\"core-js/modules/es.string.replace\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"faux-hypergrid/src/lib/Canvas\", \"@finos/perspective-viewer/dist/esm/custom_styles\", \"faux-hypergrid/src/cellEditors/Textfield\", \"core-js/modules/web.dom-collections.iterator\", \"faux-hypergrid/src/behaviors/Behavior\", \"lodash/isEqual\", \"faux-hypergrid/src/cellRenderers\", \"@finos/perspective-viewer/dist/esm/utils.js\", \"lodash/cloneDeep\", \"@finos/perspective/dist/esm/config\", \"faux-hypergrid\", \"faux-hypergrid/src/Base\", \"fin-hypergrid-grouped-header-plugin\", \"rectangular\", \"superscript-number\", \"@finos/perspective/dist/esm/config/index.js\", \"datasaur-local\", \"core-js/modules/es.string.replace\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"perspective-viewer-hypergrid\"] = factory(require(\"faux-hypergrid/src/lib/Canvas\"), require(\"@finos/perspective-viewer/dist/esm/custom_styles\"), require(\"faux-hypergrid/src/cellEditors/Textfield\"), require(\"core-js/modules/web.dom-collections.iterator\"), require(\"faux-hypergrid/src/behaviors/Behavior\"), require(\"lodash/isEqual\"), require(\"faux-hypergrid/src/cellRenderers\"), require(\"@finos/perspective-viewer/dist/esm/utils.js\"), require(\"lodash/cloneDeep\"), require(\"@finos/perspective/dist/esm/config\"), require(\"faux-hypergrid\"), require(\"faux-hypergrid/src/Base\"), require(\"fin-hypergrid-grouped-header-plugin\"), require(\"rectangular\"), require(\"superscript-number\"), require(\"@finos/perspective/dist/esm/config/index.js\"), require(\"datasaur-local\"), require(\"core-js/modules/es.string.replace\"));\n\telse\n\t\troot[\"perspective-viewer-hypergrid\"] = factory(root[\"faux-hypergrid/src/lib/Canvas\"], root[\"@finos/perspective-viewer/dist/esm/custom_styles\"], root[\"faux-hypergrid/src/cellEditors/Textfield\"], root[\"core-js/modules/web.dom-collections.iterator\"], root[\"faux-hypergrid/src/behaviors/Behavior\"], root[\"lodash/isEqual\"], root[\"faux-hypergrid/src/cellRenderers\"], root[\"@finos/perspective-viewer/dist/esm/utils.js\"], root[\"lodash/cloneDeep\"], root[\"@finos/perspective/dist/esm/config\"], root[\"faux-hypergrid\"], root[\"faux-hypergrid/src/Base\"], root[\"fin-hypergrid-grouped-header-plugin\"], root[\"rectangular\"], root[\"superscript-number\"], root[\"@finos/perspective/dist/esm/config/index.js\"], root[\"datasaur-local\"], root[\"core-js/modules/es.string.replace\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__5__, __WEBPACK_EXTERNAL_MODULE__6__, __WEBPACK_EXTERNAL_MODULE__7__, __WEBPACK_EXTERNAL_MODULE__8__, __WEBPACK_EXTERNAL_MODULE__9__, __WEBPACK_EXTERNAL_MODULE__10__, __WEBPACK_EXTERNAL_MODULE__11__, __WEBPACK_EXTERNAL_MODULE__12__, __WEBPACK_EXTERNAL_MODULE__13__, __WEBPACK_EXTERNAL_MODULE__14__, __WEBPACK_EXTERNAL_MODULE__15__, __WEBPACK_EXTERNAL_MODULE__16__, __WEBPACK_EXTERNAL_MODULE__20__, __WEBPACK_EXTERNAL_MODULE__22__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nconst COLUMN_SEPARATOR_STRING = \"|\";\n\nconst TREE_COLUMN_INDEX = require(\"faux-hypergrid/src/behaviors/Behavior\").prototype.treeColumnIndex;\n\nfunction page2hypergrid(data, row_pivots, columns) {\n    const data_columns = Object.keys(data);\n    const firstcol = data_columns.length > 0 ? data_columns[0] : undefined;\n    if (typeof firstcol === \"undefined\") {\n        return [];\n    }\n\n    const is_tree = !!row_pivots.length;\n    const flat_columns = row_pivots.length ? columns.filter(x => x !== \"__ROW_PATH__\") : columns;\n    const data_indices = data_columns.map(x => flat_columns.indexOf(x));\n    const rows = [];\n\n    for (let ridx = 0; ridx < data[firstcol].length; ridx++) {\n        const dataRow = {};\n\n        for (const cidx in data_columns) {\n            const columnName = data_columns[cidx];\n            dataRow[data_indices[cidx]] = data[columnName][ridx];\n        }\n\n        if (is_tree) {\n            if (data[\"__ROW_PATH__\"][ridx] === undefined) {\n                data[\"__ROW_PATH__\"][ridx] = [];\n            }\n\n            let name = data[\"__ROW_PATH__\"][ridx][data[\"__ROW_PATH__\"][ridx].length - 1];\n            if (name === undefined && ridx === 0) {\n                name = \"TOTAL\";\n            }\n\n            dataRow[TREE_COLUMN_INDEX] = {\n                rollup: name,\n                rowPath: [\"ROOT\"].concat(data[\"__ROW_PATH__\"][ridx]),\n                isLeaf: data[\"__ROW_PATH__\"][ridx].length >= row_pivots.length\n            };\n        }\n\n        if (data.__ID__) {\n            dataRow[\"__ID__\"] = data[\"__ID__\"][ridx].join(\"|\");\n        }\n\n        if (data.__INDEX__) {\n            dataRow[\"__INDEX__\"] = data[\"__INDEX__\"][ridx][0];\n        }\n\n        rows.push(dataRow);\n    }\n\n    return rows;\n}\n\nfunction psp2hypergrid(data, schema, tschema, row_pivots, columns) {\n    const flat_columns = row_pivots.length ? columns.filter(x => x !== \"__ROW_PATH__\") : columns;\n    const columnPaths = flat_columns.map(row => row.split(COLUMN_SEPARATOR_STRING));\n    const is_tree = !!row_pivots.length;\n    const rows = page2hypergrid(data, row_pivots, columns);\n\n    return {\n        rows: rows,\n        isTree: is_tree,\n        configuration: {},\n        rowPivots: row_pivots,\n        columnPaths: (is_tree ? [[\" \"]] : []).concat(columnPaths),\n        columnTypes: (is_tree ? [row_pivots.map(x => tschema[x])] : []).concat(columnPaths.map(col => schema[col[col.length - 1]]))\n    };\n}\n\nmodule.exports = {psp2hypergrid, page2hypergrid};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8__;","module.exports = __WEBPACK_EXTERNAL_MODULE__9__;","module.exports = __WEBPACK_EXTERNAL_MODULE__10__;","module.exports = __WEBPACK_EXTERNAL_MODULE__11__;","module.exports = __WEBPACK_EXTERNAL_MODULE__12__;","module.exports = __WEBPACK_EXTERNAL_MODULE__13__;","module.exports = __WEBPACK_EXTERNAL_MODULE__14__;","module.exports = __WEBPACK_EXTERNAL_MODULE__15__;","module.exports = __WEBPACK_EXTERNAL_MODULE__16__;","module.exports = \"<!--\\n   \\n   Copyright (c) 2017, the Perspective Authors.\\n   \\n   This file is part of the Perspective library, distributed under the terms of\\n   the Apache License 2.0.  The full license can be found in the LICENSE file.\\n\\n-->\\n\\n<template id='perspective-hypergrid'>\\n    <div id='gridWrapper'>\\n        <div id='mainGrid'></div>\\n    </div>\\n</template>\";","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{position:absolute;outline:0;top:0;left:0;bottom:0;right:0}:host table{font:12px \\\"Open Sans\\\",helvetica,sans-serif}:host td.hover{background-color:#eee}:host tr.hover{background-color:#f6f6f6}:host td.positive{color:#1078d1}:host td.negative{color:#de3838}:host input.hypergrid-textfield{position:absolute;outline:0;border:1px solid var(--hypergrid-editor--border-color,rgba(0,0,0,.4));color:var(--hypergrid--color,inherit);background:var(--hypergrid--background,#fff);box-sizing:border-box;padding:0 4px 3px 5px}:host #gridWrapper{box-sizing:border-box;width:100%;height:100%;margin:0;padding:var(--hypergrid--padding,0)}:host #mainGrid{position:relative;width:100%;height:100%;margin:0;padding:0}:host #mainGrid>div{position:absolute;width:100%;height:100%;overflow:hidden}:host #mainGrid input{margin:0}:host div.finbar-vertical{margin:0!important;width:15px!important;box-shadow:0 0 0 #000,0 0 0 #000,0 0 0 #000}:host div.finbar-vertical div.thumb{width:var(--hypergrid-scrollbar--width,13px);right:-1px;background-color:#9e9e9e;box-shadow:0 0 0 #000,0 0 0 #000,0 0 0 #000;margin:0!important;border-radius:var(--hypergrid-scrollbar--border-radius,0)}:host div.finbar-horizontal{margin:0!important;height:15px!important;box-shadow:0 0 0 #000,0 0 0 #000,0 0 0 #000}:host div.finbar-horizontal div.thumb{margin:-3px 2px;height:var(--hypergrid-scrollbar--width,13px);bottom:4px;background-color:#9e9e9e;box-shadow:0 0 0 #000,0 0 0 #000,0 0 0 #000;border-radius:var(--hypergrid-scrollbar--border-radius,0)}\", \"\"]);\n\n// exports\n","/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {get_type_config, get_types} from \"@finos/perspective/dist/esm/config\";\n\nfunction null_formatter(formatter, null_value = \"\") {\n    let old = formatter.format.bind(formatter);\n    formatter.format = val => {\n        if (typeof val === \"string\") {\n            return val;\n        }\n        if (null_value === val) {\n            return \"-\";\n        }\n        let x = old(val);\n        if (x === \"\") {\n            return \"-\";\n        }\n        return x;\n    };\n\n    return formatter;\n}\n\nfunction custom_formatter(formatter, f) {\n    let old = formatter.format.bind(formatter);\n    formatter.format = val => {\n        val = f(old(val));\n        if (!val) {\n            return \"-\";\n        }\n        return val;\n    };\n\n    return formatter;\n}\n\nexport function set_formatters(grid) {\n    const formatters = {};\n    for (const type of get_types()) {\n        const config = get_type_config(type);\n        const format_function = {\n            float: grid.localization.NumberFormatter,\n            integer: grid.localization.NumberFormatter,\n            datetime: grid.localization.DateFormatter,\n            date: grid.localization.DateFormatter\n        }[config.type || type];\n        if (format_function) {\n            if (typeof config.format === \"string\") {\n                formatters[type] = custom_formatter(new format_function(\"en-us\"), eval(config.format));\n            } else {\n                formatters[type] = null_formatter(new format_function(\"en-us\", config.format), config.null_value);\n            }\n            grid.localization.add(`perspective-${type}`, formatters[type]);\n        }\n    }\n\n    grid.localization.header = {\n        format: value => grid.behavior.formatColumnHeader(value)\n    };\n\n    grid.localization.add(\"FinanceTree\", {\n        format: function(val, type) {\n            const f = formatters[type];\n            if (f) {\n                return f.format(val);\n            }\n            return val;\n        },\n        parse: x => x\n    });\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__20__;","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__22__;","/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport rectangular from \"rectangular\";\nimport superscript from \"superscript-number\";\nimport isEqual from \"lodash/isEqual\";\n\nimport cellRenderersRegistry from \"faux-hypergrid/src/cellRenderers\";\n\nvar Borders = cellRenderersRegistry.BaseClass.extend(\"Borders\", {\n    paint: function(gc, config) {\n        var bounds = config.bounds,\n            x = bounds.x,\n            y = bounds.y,\n            w = bounds.width,\n            h = bounds.height - 1;\n        var color;\n\n        gc.save();\n        gc.translate(-0.5, 0.5); // paint \"sharp\" lines on pixels instead of \"blurry\" lines between pixels\n        gc.cache.lineWidth = 1;\n\n        color = config.borderTop;\n        if (color) {\n            gc.beginPath();\n            gc.moveTo(x, y);\n            gc.lineTo(x + w, y);\n            gc.cache.strokeStyle = color;\n            gc.stroke();\n        }\n\n        color = config.borderRight;\n        if (color) {\n            gc.beginPath();\n            gc.moveTo(x + w, y);\n            gc.lineTo(x + w, y + h);\n            gc.cache.strokeStyle = color;\n            gc.stroke();\n        }\n\n        color = config.borderBottom;\n        if (color) {\n            gc.beginPath();\n            gc.moveTo(x, y + h);\n            gc.lineTo(x + w, y + h);\n            gc.cache.strokeStyle = color;\n            gc.stroke();\n        }\n\n        color = config.borderLeft;\n        if (color) {\n            gc.beginPath();\n            gc.moveTo(x, y);\n            gc.lineTo(x, y + h);\n            gc.cache.strokeStyle = color;\n            gc.stroke();\n        }\n\n        gc.restore();\n    }\n});\n\ncellRenderersRegistry.add(Borders);\n\n/**\n * @this {Behavior}\n * @param payload\n */\nfunction setPSP(payload, force = false) {\n    const new_schema = [];\n\n    if (payload.isTree) {\n        new_schema[this.treeColumnIndex] = {\n            name: this.treeColumnIndex.toString(),\n            header: \" \" // space char because empty string defaults to `name`\n        };\n    }\n\n    payload.columnPaths.forEach(function(columnPath, columnIndex) {\n        const col_name = columnPath.join(\"|\"),\n            aliases = payload.configuration.columnAliases,\n            header = (aliases && aliases[col_name]) || col_name,\n            name = columnIndex.toString(),\n            type = payload.columnTypes[columnIndex];\n\n        if (payload.isTree && columnIndex === 0) {\n            new_schema[-1] = {name, header, type};\n        } else {\n            new_schema.push({name, header, type, index: columnIndex - (payload.isTree ? 1 : 0)});\n        }\n    });\n\n    this.grid.properties.showTreeColumn = payload.isTree;\n\n    const config = this.grid.behavior.dataModel._config;\n    const column_only = config.row_pivots.length === 0 && config.column_pivots.length > 0;\n    const selectable = !column_only && this.grid.behavior.dataModel._viewer.hasAttribute(\"selectable\");\n    this.grid.addProperties(this.grid.get_dynamic_styles(selectable));\n\n    // Following call to setData signals the grid to call createColumns and\n    // dispatch the fin-hypergrid-schema-loaded event (in that order). Here we\n    // inject a createColumns override into `this` (behavior instance) to\n    // complete the setup before the event is dispatched.\n    this.createColumns = createColumns;\n    this.refreshColumns = refreshColumns;\n\n    if (\n        !force &&\n        this._memoized_schema &&\n        isEqual(this._memoized_schema.slice(0, this._memoized_schema.length), new_schema.slice(0, new_schema.length)) &&\n        isEqual(payload.rowPivots, this._memoized_pivots)\n    ) {\n        this.grid.sbVScroller.index = 0;\n        this.grid.behavior.dataModel.data = payload.rows;\n        this.grid.behavior.dataModel._data_window = undefined;\n    } else {\n        this.grid.sbVScroller.index = 0;\n        this.grid.sbHScroller.index = 0;\n        this.grid.selectionModel.clear();\n        this.grid.setData({\n            data: payload.rows,\n            schema: new_schema\n        });\n    }\n    this._memoized_schema = new_schema;\n    this._memoized_pivots = payload.rowPivots;\n}\n\n/**\n * @this {Behavior}\n */\nfunction createColumns() {\n    Object.getPrototypeOf(this).createColumns.call(this);\n    this.refreshColumns();\n    this.setHeaders(); // grouped-header override that sets all header cell renderers and header row height\n    this.schema_loaded = true;\n}\n\nfunction refreshColumns() {\n    this.getActiveColumns().forEach(function(column) {\n        setColumnPropsByType.call(this, column);\n    }, this);\n\n    let treeColumn = this.getTreeColumn();\n    if (treeColumn) {\n        setColumnPropsByType.call(this, treeColumn);\n    }\n}\n\n/**\n * @this {Behavior}\n */\nfunction setColumnPropsByType(column) {\n    const props = column.properties;\n    if (column.index === this.treeColumnIndex) {\n        props.format = \"FinanceTree\";\n    } else {\n        props.format = `perspective-${column.type}`;\n    }\n    const config = this.grid.behavior.dataModel._config;\n    const isEditable = this.grid.behavior.dataModel._viewer.hasAttribute(\"editable\");\n    if (isEditable && config.row_pivots.length === 0 && config.column_pivots.length === 0) {\n        props.editor = {\n            integer: \"perspective-number\",\n            string: \"perspective-text\",\n            date: \"perspective-date\",\n            datetime: \"perspective-datetime\",\n            float: \"perspective-number\"\n        }[column.type];\n        Object.assign(props, {\n            editable: true,\n            editOnKeydown: true,\n            editOnNextCell: false,\n            editOnDoubleClick: true,\n            editorActivationKeys: [\"alt\", \"esc\"],\n            cellSelection: true\n        });\n    }\n    const styles = this.grid.get_styles();\n    if (styles[column.type]) {\n        Object.assign(props, styles[column.type]);\n    }\n}\n\n/**\n * @this {Behavior}\n */\nfunction formatColumnHeader(value) {\n    const config = this.dataModel.getConfig();\n    const index = config.sort.findIndex(item => item[0] === value.trim());\n\n    if (index > -1) {\n        const direction = config.sort[index][1];\n\n        if (direction in this.charMap) {\n            value = `${value} ${this.charMap[direction]}${config.sort.length > 1 ? superscript(index + 1) : \"\"}`;\n        }\n    }\n\n    return value;\n}\n\nfunction addSortChars(charMap) {\n    Object.assign(charMap, {\n        asc: \"\\u2191\",\n        desc: \"\\u2193\",\n        \"asc abs\": \"\\u21E7\",\n        \"desc abs\": \"\\u21E9\",\n        \"col asc\": \"\\u2192\",\n        \"col desc\": \"\\u2190\",\n        \"col asc abs\": \"\\u21E8\",\n        \"col desc abs\": \"\\u21E6\"\n    });\n}\n\nfunction sortColumn(event) {\n    event.preventDefault();\n    event.handled = true;\n    const config = this.behavior.dataModel.getConfig();\n    const column = this.behavior.getColumn(event.detail.column);\n    let column_sorting, column_name;\n\n    if (config.column_pivots.length > 0) {\n        column_sorting = true;\n        column_name = column.header.split(\"|\")[config.column_pivots.length]; // index of last column is always the length of the column pivots\n    } else {\n        column_sorting = false;\n        column_name = column.header;\n    }\n\n    const viewer = this.behavior.dataModel._viewer;\n\n    const item_index = config.sort.findIndex(item => item[0] === column_name.trim());\n    const already_sorted = item_index > -1;\n\n    // shift key to enable abs sorting alt key to not remove already sorted\n    // columns\n    const abs_sorting = event.detail.keys && (event.detail.keys.indexOf(\"ALTSHIFT\") > -1 || event.detail.keys.indexOf(\"ALT\") > -1) && column.type !== \"string\";\n    const shift_pressed = event.detail.keys && (event.detail.keys.indexOf(\"ALTSHIFT\") > -1 || event.detail.keys.indexOf(\"SHIFT\") > -1);\n    let new_sort_direction;\n\n    // if the column is already sorted we increment the sort\n    if (already_sorted) {\n        const item = config.sort[item_index];\n        const direction = item[1];\n        new_sort_direction = viewer._increment_sort(direction, column_sorting, abs_sorting);\n        item[1] = new_sort_direction;\n    } else {\n        new_sort_direction = viewer._increment_sort(\"none\", column_sorting, abs_sorting);\n    }\n\n    //if alt pressed and column is already sorted, we change the sort for the\n    //column and leave the rest as is\n    if (shift_pressed && already_sorted) {\n        if (new_sort_direction === \"none\") {\n            config.sort.splice(item_index, 1);\n        }\n        viewer.sort = JSON.stringify(config.sort);\n    } else if (shift_pressed) {\n        // if alt key is pressed and column is NOT already selected, append the\n        // new sort column\n        config.sort.push([column_name, new_sort_direction]);\n        viewer.sort = JSON.stringify(config.sort);\n    } else {\n        viewer.sort = JSON.stringify([[column_name, new_sort_direction]]);\n    }\n}\n\nconst right_click_handler = e => {\n    const old_event = e.detail.primitiveEvent;\n    const new_event = new MouseEvent(old_event.type, old_event);\n    e.target.parentElement.parentElement.parentElement.dispatchEvent(new_event);\n};\n\nasync function getCellConfig(row_idx, col_idx) {\n    const config = this.dataModel.getConfig();\n    const row_pivots = config.row_pivots;\n    const column_pivots = config.column_pivots;\n    const start_row = row_idx >= 0 ? row_idx : 0;\n    const end_row = start_row + 1;\n    const r = await this.dataModel._view.to_json({start_row, end_row});\n    const row_paths = r.map(x => x.__ROW_PATH__);\n    const row_pivots_values = row_paths[0] || [];\n    const row_filters = row_pivots\n        .map((pivot, index) => {\n            const pivot_value = row_pivots_values[index];\n            return pivot_value ? [pivot, \"==\", pivot_value] : undefined;\n        })\n        .filter(x => x);\n    const column_index = row_pivots.length > 0 ? col_idx + 1 : col_idx;\n    const column_paths = Object.keys(r[0])[column_index];\n    const result = {row: r[0]};\n    let column_filters = [];\n    if (column_paths) {\n        const column_pivot_values = column_paths.split(\"|\");\n        result.column_names = [column_pivot_values[column_pivot_values.length - 1]];\n        column_filters = column_pivots\n            .map((pivot, index) => {\n                const pivot_value = column_pivot_values[index];\n                return pivot_value ? [pivot, \"==\", pivot_value] : undefined;\n            })\n            .filter(x => x)\n            .filter(([, , value]) => value !== \"__ROW_PATH__\");\n    }\n\n    const filters = config.filter.concat(row_filters).concat(column_filters);\n    result.config = {filters};\n    return result;\n}\n// `install` makes this a Hypergrid plug-in\nexport const install = function(grid) {\n    addSortChars(grid.behavior.charMap);\n\n    Object.getPrototypeOf(grid.behavior).setPSP = setPSP;\n\n    Object.getPrototypeOf(grid.behavior).formatColumnHeader = formatColumnHeader;\n\n    grid.addEventListener(\"fin-column-sort\", sortColumn.bind(grid));\n\n    grid.addEventListener(\"fin-canvas-context-menu\", right_click_handler);\n    grid.addEventListener(\"fin-row-selection-changed\", async function(event) {\n        const rows = event.detail.rows;\n\n        const selected = rows.length > 0;\n        const detail = selected ? await getCellConfig.call(event.detail.grid.behavior, rows[0]) : {config: {filters: []}};\n\n        event.detail.grid.canvas.dispatchEvent(\n            new CustomEvent(\"perspective-select\", {\n                bubbles: true,\n                composed: true,\n                detail: {selected, ...detail}\n            })\n        );\n    });\n\n    Object.getPrototypeOf(grid.behavior).getCursorAt = function(x, y, event) {\n        const rp_len = this.dataModel.data[y - 1]?.[-1]?.rowPath?.length;\n        const is_select = !!this.grid.properties.rowSelection;\n        if (is_select) {\n            if (x === -1 && rp_len <= this.dataModel._config.row_pivots.length && event?.gridPoint.x <= rp_len * 15 + 10) {\n                return \"pointer\";\n            }\n        } else {\n            if (x === -1 && rp_len <= this.dataModel._config.row_pivots.length) {\n                return \"pointer\";\n            }\n        }\n    };\n\n    function updateCursor(event) {\n        var cursor = this.behavior.getCursorAt(-1, -1);\n        var hoverCell = this.hoverCell;\n        if (hoverCell && hoverCell.x > -2 && hoverCell.y > -1) {\n            var x = hoverCell.x + this.getHScrollValue();\n            cursor = this.behavior.getCursorAt(x, hoverCell.y + this.getVScrollValue(), event);\n        }\n        this.beCursor(cursor);\n    }\n\n    Object.getPrototypeOf(grid.behavior).onMouseMove = function(grid, event) {\n        if (this.featureChain) {\n            this.featureChain.handleMouseMove(grid, event);\n            updateCursor.call(grid, event);\n            this.featureChain.setCursor(grid);\n        }\n    };\n\n    Object.getPrototypeOf(grid.behavior).cellClicked = async function(event) {\n        event.primitiveEvent.preventDefault();\n        event.handled = true;\n        const {x, y} = event.dataCell;\n        const config = this.dataModel.getConfig();\n        const row_pivots = config.row_pivots;\n        const column_pivots = config.column_pivots;\n        const start_row = y >= 0 ? y : 0;\n        const end_row = start_row + 1;\n        const r = await this.dataModel._view.to_json({start_row, end_row});\n        const row_paths = r.map(x => x.__ROW_PATH__);\n        const row_pivots_values = row_paths[0] || [];\n        const row_filters = row_pivots\n            .map((pivot, index) => {\n                const pivot_value = row_pivots_values[index];\n                return pivot_value ? [pivot, \"==\", pivot_value] : undefined;\n            })\n            .filter(x => x);\n        const column_index = row_pivots.length > 0 ? x + 1 : x;\n        const column_paths = Object.keys(r[0])[column_index];\n        let column_filters = [];\n        let column_names;\n        if (column_paths) {\n            const column_pivot_values = column_paths.split(\"|\");\n            column_names = [column_pivot_values[column_pivot_values.length - 1]];\n            column_filters = column_pivots\n                .map((pivot, index) => {\n                    const pivot_value = column_pivot_values[index];\n                    return pivot_value ? [pivot, \"==\", pivot_value] : undefined;\n                })\n                .filter(x => x)\n                .filter(([, , value]) => value !== \"__ROW_PATH__\");\n        }\n\n        const filters = config.filter.concat(row_filters).concat(column_filters);\n\n        // this only works for single row select (which is all we support\n        // right now)\n        if (this.grid.properties.rowSelection) {\n            const selected_rows = this.grid.getSelectedRows();\n            const selected = selected_rows[0] === y;\n            if (selected_rows.length === 0) {\n                delete this.dataModel[\"_selected_row_index\"];\n            }\n            this.grid.canvas.dispatchEvent(\n                new CustomEvent(\"perspective-select\", {\n                    bubbles: true,\n                    composed: true,\n                    detail: {\n                        selected,\n                        config: {filters: selected ? filters : []},\n                        column_names,\n                        row: r[0]\n                    }\n                })\n            );\n        }\n        this.grid.canvas.dispatchEvent(\n            new CustomEvent(\"perspective-click\", {\n                bubbles: true,\n                composed: true,\n                detail: await getCellConfig.call(this, y, x)\n            })\n        );\n\n        const rp_len = this.dataModel.data[y]?.[-1]?.rowPath?.length;\n        const is_toggle = !this.grid.properties.rowSelection || event?.gridPoint.x <= rp_len * 15 + 10;\n\n        if (is_toggle) {\n            return this.dataModel.toggleRow(event.dataCell.y, event.dataCell.x, event);\n        }\n    };\n\n    // Prevents flashing of cell selection on scroll\n    const renderGrid = grid.renderer.renderGrid;\n    grid.renderer.renderGrid = function(gc) {\n        renderGrid.call(this, gc);\n        this.renderOverrides(gc);\n        this.renderLastSelection(gc);\n    };\n\n    grid.canvas.canvas.addEventListener(\"mousewheel\", e => {\n        if (e.shiftKey) {\n            e.stopPropagation();\n        }\n    });\n\n    // Corrects for deselection behavior on keyiup due to shadow-dom\n    grid.canvas.hasFocus = function() {\n        if (!grid.div?.isConnected) {\n            return;\n        }\n        const grid_element = grid.div.parentNode.parentNode.host;\n        const view_shadow_root = grid_element.parentNode.parentNode.parentNode.parentNode.parentNode;\n        return view_shadow_root.activeElement === grid_element;\n    };\n\n    // Disable cell selection dragging\n    grid.lookupFeature(\"CellSelection\").handleMouseDown = function(grid, event) {\n        var dx = event.gridCell.x,\n            dy = event.dataCell.y,\n            isSelectable = grid.behavior.getCellProperty(event.dataCell.x, event.gridCell.y, \"cellSelection\");\n\n        if (isSelectable && event.isDataCell && !event.primitiveEvent.detail.isRightClick) {\n            var dCell = grid.newPoint(dx, dy),\n                primEvent = event.primitiveEvent,\n                keys = primEvent.detail.keys;\n            this.extendSelection(grid, dCell, keys);\n        } else if (this.next) {\n            this.next.handleMouseDown(grid, event);\n        }\n    };\n\n    // Disable cell selection by shift-click\n    grid.lookupFeature(\"CellSelection\").extendSelection = function(grid, gridCell, keys) {\n        var hasCTRL = keys.indexOf(\"CTRL\") >= 0,\n            hasSHIFT = false,\n            mousePoint = grid.getMouseDown(),\n            x = gridCell.x, // - numFixedColumns + scrollLeft;\n            y = gridCell.y; // - numFixedRows + scrollTop;\n\n        //were outside of the grid do nothing\n        if (x < 0 || y < 0) {\n            return;\n        }\n\n        //we have repeated a click in the same spot deslect the value from last\n        //time\n        if (hasCTRL && x === mousePoint.x && y === mousePoint.y) {\n            grid.clearMostRecentSelection();\n            grid.popMouseDown();\n            grid.repaint();\n            return;\n        }\n\n        if (!hasCTRL && !hasSHIFT) {\n            grid.clearSelections();\n        }\n\n        if (hasSHIFT) {\n            grid.clearMostRecentSelection();\n            grid.select(mousePoint.x, mousePoint.y, x - mousePoint.x, y - mousePoint.y);\n            grid.setDragExtent(grid.newPoint(x - mousePoint.x, y - mousePoint.y));\n        } else {\n            grid.select(x, y, 0, 0);\n            grid.setMouseDown(grid.newPoint(x, y));\n            grid.setDragExtent(grid.newPoint(0, 0));\n        }\n        grid.repaint();\n    };\n\n    // Prevent multiple cell moves while pressing navigation keys while editing.\n    grid.lookupFeature(\"CellSelection\").handleDOWN = function(grid, event) {\n        event.primitiveEvent.preventDefault();\n        if (!grid.cellEditor) {\n            const count = this.getAutoScrollAcceleration();\n            let {x, y} = grid.selectionModel.getLastSelection().origin;\n            const max = grid.renderer.dataWindow.origin.y + grid.renderer.dataWindow.extent.y - 2;\n            if (y + count > max) {\n                grid.sbVScroller.index++;\n            }\n            y = Math.min(grid.behavior.dataModel.getRowCount() - 1, y + count);\n            grid.selectionModel.select(x, y, 0, 0);\n            grid.repaint();\n        }\n    };\n\n    grid.lookupFeature(\"CellSelection\").handleUP = function(grid, event) {\n        event.primitiveEvent.preventDefault();\n        if (!grid.cellEditor) {\n            const count = this.getAutoScrollAcceleration();\n            let {x, y} = grid.selectionModel.getLastSelection().origin;\n            const min = grid.renderer.dataWindow.origin.y;\n            if (y - count < min) {\n                grid.sbVScroller.index--;\n            }\n            y = Math.max(0, y - count);\n            grid.selectionModel.select(x, y, 0, 0);\n            grid.repaint();\n        }\n    };\n\n    grid.lookupFeature(\"CellSelection\").handleLEFT = function(grid, event) {\n        event.primitiveEvent.preventDefault();\n        if (!grid.cellEditor) {\n            const count = this.getAutoScrollAcceleration();\n            let {x, y} = grid.selectionModel.getLastSelection().origin;\n            const min = grid.renderer.dataWindow.origin.x;\n            if (x - count < min) {\n                grid.sbHScroller.index--;\n            }\n            x = Math.max(0, x - 1);\n            grid.selectionModel.select(x, y, 0, 0);\n            grid.repaint();\n        }\n    };\n\n    grid.lookupFeature(\"CellSelection\").handleRIGHT = function(grid, event) {\n        event.primitiveEvent.preventDefault();\n        if (!grid.cellEditor) {\n            const count = this.getAutoScrollAcceleration();\n            let {x, y} = grid.selectionModel.getLastSelection().origin;\n            const max = grid.renderer.dataWindow.origin.x + grid.renderer.dataWindow.extent.x - 1;\n            if (x + count > max) {\n                grid.sbHScroller.index++;\n            }\n            x = Math.min(grid.behavior.schema.length - 1, x + count);\n            grid.selectionModel.select(x, y, 0, 0);\n            grid.repaint();\n        }\n    };\n\n    grid.lookupFeature(\"CellSelection\").moveShiftSelect = function(grid, offsetX, offsetY) {\n        grid.moveSingleSelect(offsetX, offsetY);\n    };\n\n    function update_bounds() {\n        this.width = Math.floor(this.div.clientWidth);\n        this.height = Math.floor(this.div.clientHeight);\n        this.bounds = new rectangular.Rectangle(0, 0, this.width, this.height);\n        this.component.setBounds(this.bounds);\n    }\n\n    grid.canvas.resize = async function(force) {\n        //fix ala sir spinka, see\n        //http://www.html5rocks.com/en/tutorials/canvas/hidpi/ just add 'hdpi'\n        //as an attribute to the fin-canvas tag\n        let ratio = 1;\n        const isHIDPI = window.devicePixelRatio && this.component.properties.useHiDPI;\n        if (isHIDPI) {\n            const devicePixelRatio = window.devicePixelRatio || 1;\n            const backingStoreRatio =\n                this.gc.webkitBackingStorePixelRatio || this.gc.mozBackingStorePixelRatio || this.gc.msBackingStorePixelRatio || this.gc.oBackingStorePixelRatio || this.gc.backingStorePixelRatio || 1;\n\n            ratio = devicePixelRatio / backingStoreRatio;\n        }\n\n        update_bounds.call(this);\n\n        let render = true;\n        const start_time = performance.now();\n        const dataModel = this.component.grid.behavior.dataModel;\n        if (this.height * ratio !== this.canvas.height || this.width * ratio !== this.canvas.width || force) {\n            while (dataModel._view && render) {\n                if (performance.now() - start_time > 3000) {\n                    throw new Error(\"Timeout\");\n                }\n                if (typeof render === \"object\") {\n                    // If we are awaiting this grid's initialization, yield\n                    // until it is ready.\n                    await new Promise(setTimeout);\n                }\n                grid.renderer.computeCellsBounds(true);\n                render = await new Promise(resolve => dataModel.fetchData(undefined, resolve));\n            }\n        }\n\n        this.buffer.width = this.canvas.width = this.width * ratio;\n        this.buffer.height = this.canvas.height = this.height * ratio;\n\n        this.canvas.style.width = this.buffer.style.width = this.width + \"px\";\n        this.canvas.style.height = this.buffer.style.height = this.height + \"px\";\n\n        this.bc.scale(ratio, ratio);\n        if (isHIDPI && !this.component.properties.useBitBlit) {\n            this.gc.scale(ratio, ratio);\n        }\n        if (dataModel._view) {\n            this.resizeNotification();\n        }\n        this.component.grid.renderer.needsComputeCellsBounds = false;\n        grid.canvas.paintNow();\n    };\n};\n","/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport Behavior from \"faux-hypergrid/src/behaviors/Behavior\";\nimport {get_type_config} from \"@finos/perspective/dist/esm/config/index.js\";\nimport {page2hypergrid} from \"./psp-to-hypergrid\";\n\nconst {\n    prototype: {treeColumnIndex: TREE_COLUMN_INDEX}\n} = Behavior;\n\nfunction get_rect(nrows) {\n    if (!this.dataWindow) {\n        return [];\n    }\n    const dw = this.dataWindow;\n    return this.grid.newRectangle(dw.left, dw.top, dw.width, nrows ? Math.min(nrows - dw.top, dw.height) : dw.height); // convert from InclusiveRect\n}\n\nfunction find_row(rows, index) {\n    for (let ridx in rows) {\n        if (rows[ridx].__ID__ === index) {\n            return parseInt(ridx);\n        }\n    }\n    return -1;\n}\n\nconst _wrapper = function(f) {\n    return async function(_, resolve) {\n        let is_error;\n        try {\n            is_error = await f.call(this);\n        } catch (e) {\n            resolve(e);\n            return;\n        }\n        resolve(is_error);\n    };\n};\n\nfunction pad_data_window(rect, rowPivots = [], selection = false) {\n    const range = {\n        start_row: rect.origin.y,\n        end_row: rect.corner.y + 1,\n        start_col: rect.origin.x,\n        end_col: rect.corner.x + 3\n    };\n    range.end_col += rowPivots && rowPivots.length > 0 ? 1 : 0;\n    range.id = selection;\n    return range;\n}\n\nexport default require(\"datasaur-local\").extend(\"PerspectiveDataModel\", {\n    isTreeCol: function(x) {\n        return x === TREE_COLUMN_INDEX && this.isTree();\n    },\n\n    getValue: function(x, y) {\n        var row = this.data[y];\n        return row ? row[x] : null;\n    },\n\n    getRowCount: function() {\n        return this._nrows || 0;\n    },\n\n    getConfig: function() {\n        return this._config;\n    },\n\n    setRowCount: function(count) {\n        this._nrows = count || 0;\n    },\n\n    isTree: function() {\n        return this._isTree;\n    },\n\n    setIsTree: function(isTree) {\n        this._isTree = isTree;\n    },\n\n    setDirty: function(nrows) {\n        if (!this._grid) {\n            return;\n        }\n        if (nrows !== this._nrows) {\n            this._nrows = nrows;\n            this._grid.synchronizeScrollingBoundaries();\n        }\n        this._dirty = true;\n    },\n\n    // Called when clicking on a row group expand\n    toggleRow: async function(row, col, event) {\n        if (this.isTreeCol(col)) {\n            let isShift = false;\n            if (event.primitiveEvent.detail.primitiveEvent) {\n                isShift = !!event.primitiveEvent.detail.primitiveEvent.shiftKey; // typecast to boolean\n            }\n            let is_expanded = await this._view.get_row_expanded(row);\n            if (isShift) {\n                if (is_expanded) {\n                    if (this.data[row][col].rowPath.length === 1) {\n                        this._view.collapse(row);\n                    } else {\n                        this._view.set_depth(this.data[row][col].rowPath.length - 2);\n                    }\n                } else {\n                    this._view.set_depth(this.data[row][col].rowPath.length - 1);\n                }\n            } else {\n                if (is_expanded) {\n                    this._view.collapse(row);\n                } else {\n                    this._view.expand(row);\n                }\n            }\n            let nrows = await this._view.num_rows();\n            this.setDirty(nrows);\n            this._grid.canvas.paintNow();\n        }\n    },\n\n    _update_select_index: function() {\n        const has_cell_selections = this._grid.selectionModel.hasSelections();\n        const has_row_selections = this._grid.selectionModel.hasRowSelections();\n        if (has_cell_selections) {\n            const row_data = this.data[this._grid.selectionModel.getLastSelection().origin.y];\n            if (row_data) {\n                this._selected_cell_index = row_data.__ID__;\n            }\n        }\n        if (has_row_selections) {\n            const row_data = this.data[this._grid.getSelectedRows()[0]];\n            if (row_data) {\n                this._selected_row_index = row_data.__ID__;\n            }\n        }\n    },\n\n    _update_editor: function(rect) {\n        const editor = this._grid.cellEditor;\n        let new_index;\n        if (editor) {\n            new_index = find_row(this.data, editor._index);\n            editor.event.resetGridXY(editor.event.dataCell.x, new_index - rect.origin.y + 1);\n            editor.moveEditor();\n        }\n        return new_index;\n    },\n\n    _update_selection: function(new_index) {\n        const has_cell_selections = this._grid.selectionModel.hasSelections();\n        if (has_cell_selections) {\n            new_index = new_index || find_row(this.data, this._selected_cell_index);\n            if (new_index !== -1) {\n                const col = this._grid.selectionModel.getLastSelection().origin.x;\n                this._grid.selectionModel.select(col, new_index, 0, 0);\n            }\n        }\n        if (this._selected_row_index) {\n            this._grid.selectionModel.clearRowSelection();\n            const row_index = new_index || find_row(this.data, this._selected_row_index);\n            if (row_index !== -1) {\n                this._grid.selectionModel.selectRow(row_index);\n            }\n        }\n    },\n\n    getSelectedRowID() {\n        if (this._grid.selectionModel.hasRowSelections()) {\n            const row_data = this.data[this._grid.getSelectedRows()[0]];\n            if (row_data) {\n                return row_data.__ID__;\n            }\n        }\n    },\n\n    setSelectedRowID(index) {\n        if (this._grid.properties.rowSelection) {\n            this._selected_row_index = index;\n            this._update_selection();\n        }\n    },\n\n    pspFetch: async function(rect) {\n        const selection_enabled = this._grid.properties.rowSelection || this._viewer.hasAttribute(\"editable\");\n        const range = pad_data_window(rect, this._config.row_pivots, selection_enabled);\n        const next_page = await this._view.to_columns(range);\n        this.data = [];\n        const rows = page2hypergrid(next_page, this._config.row_pivots, this._columns);\n        const base = range.start_row;\n        const data = this.data;\n        rows.forEach((row, offset) => (data[base + offset] = row));\n    },\n\n    fetchData: _wrapper(async function() {\n        if (this._view === undefined) {\n            return true;\n        }\n\n        let rect = get_rect.call(this._grid.renderer);\n\n        if (!this._dirty && !is_cache_miss(rect, this._data_window)) {\n            return;\n        }\n\n        this._grid.renderer.needsComputeCellsBounds = true;\n\n        if (this._outstanding && !is_cache_miss(rect, this._outstanding.rect)) {\n            await this._outstanding.req;\n            this._grid.renderer.needsComputeCellsBounds = true;\n            return true;\n        }\n\n        this._dirty = false;\n        const req = this.pspFetch(rect);\n        this._outstanding = {rect, req};\n        this._update_select_index();\n\n        try {\n            await req;\n        } finally {\n            this._outstanding = undefined;\n            this._grid.renderer.needsComputeCellsBounds = true;\n        }\n\n        this._data_window = rect;\n        this._update_selection(this._update_editor(rect));\n\n        rect = get_rect.call(this._grid.renderer);\n        const ret = is_cache_miss(rect, this._data_window);\n        return ret;\n    }),\n\n    getCellEditorAt: function(columnIndex, rowIndex, declaredEditorName, options) {\n        if (!declaredEditorName) {\n            return;\n        }\n        const offset = this._grid.renderer.dataWindow.top;\n        const editor = this._grid.cellEditors.create(declaredEditorName, options);\n        this._grid.selectionModel.select(columnIndex, rowIndex + offset - 1);\n        editor.el.addEventListener(\"blur\", () => setTimeout(() => editor.cancelEditing()));\n        const args = {\n            start_row: rowIndex + offset - 1,\n            end_row: rowIndex + offset,\n            start_col: columnIndex,\n            end_col: columnIndex + 1,\n            index: true\n        };\n        editor._row = this._view.to_json(args);\n        editor._table = this._table;\n        editor._data = this.data;\n        editor._canvas = this._grid.canvas.canvas;\n        editor._index = this.data[rowIndex + offset - 1].__ID__;\n        return editor;\n    },\n\n    getCell: function(config, rendererName) {\n        var nextRow, depthDelta;\n        if (config.isUserDataArea) {\n            cellStyle.call(this, config, rendererName);\n        } else if (config.dataCell.x === TREE_COLUMN_INDEX && config.value) {\n            nextRow = this.getRow(config.dataCell.y + 1);\n            depthDelta = nextRow ? config.value.rowPath.length - nextRow[TREE_COLUMN_INDEX].rowPath.length : 1;\n            config.last = depthDelta !== 0;\n            config.expanded = depthDelta < 0;\n            config._type = this.schema[-1].type[config.value.rowPath.length - 2];\n        }\n        return config.grid.cellRenderers.get(rendererName);\n    },\n\n    clearSelectionState: function() {\n        this._selected_row_index = undefined;\n        this._selected_cell_index = undefined;\n        this._grid.selectionModel.clear();\n    }\n});\n\nfunction is_cache_miss(req, cache) {\n    return !cache || req.top !== cache.top || req.top + req.height !== cache.top + cache.height || req.left !== cache.left || req.left + req.width !== cache.left + cache.width;\n}\n\nfunction cellStyle(gridCellConfig) {\n    if (gridCellConfig.value === null || gridCellConfig.value === undefined) {\n        gridCellConfig.value = \"-\";\n    } else {\n        let type = this.schema[gridCellConfig.dataCell.x].type;\n        const type_config = get_type_config(type);\n        if (type_config.type) {\n            type = type_config.type;\n        }\n        if ([\"number\", \"float\", \"integer\"].indexOf(type) > -1) {\n            if (gridCellConfig.value === 0) {\n                gridCellConfig.value = type === \"float\" ? \"0.00\" : \"0\";\n            } else if (isNaN(gridCellConfig.value)) {\n                gridCellConfig.value = \"-\";\n            } else {\n                if (gridCellConfig.value > 0) {\n                    gridCellConfig.color = gridCellConfig.columnColorNumberPositive || \"rgb(160,207,255)\";\n                    gridCellConfig.backgroundColor = gridCellConfig.columnBackgroundColorNumberPositive ? gridCellConfig.columnBackgroundColorNumberPositive : gridCellConfig.backgroundColor;\n                    gridCellConfig.borderBottom = gridCellConfig.borderBottomPositive ? gridCellConfig.borderBottomPositive : gridCellConfig.borderBottom;\n                    gridCellConfig.borderRight = gridCellConfig.borderRightPositive ? gridCellConfig.borderRightPositive : gridCellConfig.borderRight;\n                } else {\n                    gridCellConfig.color = gridCellConfig.columnColorNumberNegative || \"rgb(255,136,136)\";\n                    gridCellConfig.backgroundColor = gridCellConfig.columnBackgroundColorNumberNegative ? gridCellConfig.columnBackgroundColorNumberNegative : gridCellConfig.backgroundColor;\n                    gridCellConfig.borderBottom = gridCellConfig.borderBottomNegative ? gridCellConfig.borderBottomNegative : gridCellConfig.borderBottom;\n                    gridCellConfig.borderRight = gridCellConfig.borderRightNegative ? gridCellConfig.borderRightNegative : gridCellConfig.borderRight;\n                }\n            }\n        } else if (type === \"boolean\") {\n            gridCellConfig.value = String(gridCellConfig.value);\n        }\n    }\n}\n","/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {PropsBuilder, get_style} from \"@finos/perspective-viewer/dist/esm/custom_styles\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\nconst properties = new PropsBuilder();\nconst title = `--hypergrid`;\n\nproperties.add_fonts({\n    font: title,\n    columnHeaderFont: `${title}-header`,\n    columnHeaderForegroundSelectionFont: `${title}-header`,\n    foregroundSelectionFont: `${title}-header`,\n    treeHeaderForegroundSelectionFont: [`${title}-tree-header-selection`, `${title}-header`],\n    rowHeaderFont: title,\n    treeHeaderFont: title\n});\n\nproperties.add_styles({\n    treeHeaderBackgroundColor: `${title}-tree-header--background`,\n    backgroundColor: `${title}--background`,\n    treeHeaderColor: `${title}-tree-header--color`,\n    treeHeaderForegroundSelectionColor: [`${title}-tree-header-selection--color`, `${title}--color`],\n    treeHeaderBackgroundSelectionColor: [`${title}-tree-header-selection--background`, `${title}-selection--background`],\n    backgroundSelectionColor: `${title}-selection--background`,\n    foregroundSelectionColor: [`${title}--color`, `color`],\n    borderBottom: `${title}--border-bottom-color`,\n    borderRight: `${title}--border-right-color`,\n    borderBottomPositive: `${title}-positive--border-bottom-color`,\n    borderBottomNegative: `${title}-negative--border-bottom-color`,\n    borderRightPositive: `${title}-positive--border-right-color`,\n    borderRightNegative: `${title}-negative--border-right-color`,\n    color: [`${title}--color`, `color`],\n    columnHeaderBackgroundColor: `${title}-header--background`,\n    columnHeaderSeparatorColor: `${title}-separator--color`,\n    columnHeaderColor: `${title}-header--color`,\n    columnHeaderForegroundSelectionColor: `${title}-header--color`,\n    columnColorNumberPositive: `${title}-positive--color`,\n    columnColorNumberNegative: `${title}-negative--color`,\n    columnBackgroundColorNumberPositive: `${title}-positive--background`,\n    columnBackgroundColorNumberNegative: `${title}-negative--background`,\n    selectionRegionOverlayColor: `${title}-editor--background`,\n    selectionRegionOutlineColor: `${title}-editor--border-color`,\n    gridLinesVColor: `${title}-gridline--color`,\n    gridLinesHColor: `${title}-gridline--color`,\n    lineColor: `${title}-gridline--color`,\n    fixedLinesVColor: `${title}-gridline--color`,\n    fixedLinesHColor: `${title}-gridline--color`,\n    halign: `${title}--text-align`,\n    columnHeaderHalign: `${title}--text-align`,\n    hoverCellHighlight: {\n        enabled: true,\n        backgroundColor: `${title}-cell-hover--background`,\n        color: `${title}-cell-hover--color`\n    }\n});\n\nproperties.add_measures({\n    defaultRowHeight: `${title}-row--height`,\n    groupedHeader: {\n        flatHeight: `${title}-row--height`\n    },\n    width: `${title}--width`,\n    minimumColumnWidth: `${title}--min-width`,\n    maximumColumnWidth: `${title}--max-width`\n});\n\nproperties.add_styles({\n    hoverRowHighlight: {\n        enabled: true,\n        backgroundColor: `${title}-row-hover--background`,\n        color: `${title}-row-hover--color`\n    }\n});\n\nexport function get_styles(elem) {\n    return properties.get_properties(elem);\n}\n\nexport function clear_styles(elem) {\n    return properties.clear_properties(elem);\n}\n\nconst COLUMN_HEADER_FONT = \"12px Helvetica, sans-serif\";\nconst GROUP_LABEL_FONT = \"12px Open Sans, sans-serif\";\n\nconst base_grid_properties = {\n    autoSelectRows: false,\n    cellPadding: 5,\n    cellSelection: false,\n    columnSelection: false,\n    rowSelection: false,\n    checkboxOnlyRowSelections: false,\n    columnClip: true,\n    treeHeaderBackgroundSelectionColor: \"rgba(147, 185, 255, 0.625)\", // same as default hypergrid backgroundSelectionColor\n    columnHeaderFont: COLUMN_HEADER_FONT,\n    columnHeaderForegroundSelectionFont: COLUMN_HEADER_FONT,\n    columnHeaderBackgroundSelectionColor: undefined,\n    columnsReorderable: false,\n    defaultRowHeight: 24,\n    enableContinuousRepaint: false,\n    feedbackCount: 1000000,\n    fixedColumnCount: 0,\n    fixedRowCount: 0,\n    fixedLinesHWidth: 1,\n    fixedLinesVWidth: 1,\n    font: '12px \"Arial\", Helvetica, sans-serif',\n    foregroundSelectionFont: '12px \"Arial\", Helvetica, sans-serif',\n    gridLinesH: false,\n    gridLinesV: true, // except: due to groupedHeaderPlugin's `clipRuleLines: true` option, only header row displays these lines\n    gridLinesUserDataArea: false, // restricts vertical rule line rendering to header row only\n    groupedHeader: {\n        flatHeight: \"30\",\n        paintBackground: null, // no group header label decoration\n        columnHeaderLines: false, // only draw vertical rule lines between group labels\n        groupConfig: [\n            {\n                halign: \"center\", // center group labels\n                font: GROUP_LABEL_FONT\n            }\n        ]\n    },\n    halign: \"left\",\n    headerTextWrapping: false,\n    hoverColumnHighlight: {enabled: false},\n    hoverRowHighlight: {\n        enabled: true,\n        backgroundColor: \"#555\"\n    },\n    hoverCellHighlight: {\n        enabled: true,\n        backgroundColor: \"#333\"\n    },\n    noDataMessage: \"\",\n    minimumColumnWidth: 50,\n    multipleSelections: false,\n    renderFalsy: false,\n    rowHeaderFont: \"12px Arial, Helvetica, sans-serif\",\n    rowHeaderForegroundSelectionFont: '12px \"Arial\", Helvetica, sans-serif',\n    rowResize: true,\n    scrollbarHoverOff: \"visible\",\n    rowHeaderCheckboxes: false,\n    rowHeaderNumbers: false,\n    selectionRegionOverlayColor: \"transparent\",\n    selectionRegionOutlineColor: \"rgba(0,0,0,0.2)\",\n    showFilterRow: true,\n    showHeaderRow: true,\n    showTreeColumn: false,\n    showRowNumbers: false,\n    showCheckboxes: false,\n    singleRowSelectionMode: false,\n    //    navKeyMap: {},\n    sortColumns: [],\n    sortOnDoubleClick: true,\n    treeRenderer: \"TreeCell\",\n    treeHeaderFont: \"12px Arial, Helvetica, sans-serif\",\n    treeHeaderForegroundSelectionFont: '12px \"Arial\", Helvetica, sans-serif',\n    useBitBlit: false,\n    vScrollbarClassPrefix: \"\",\n    voffset: 0\n};\n\nconst light_theme_overrides = {\n    backgroundColor: \"#ffffff\",\n    color: \"#666\",\n    font: '12px \"Open Sans\", Helvetica, sans-serif',\n    columnHeaderColor: \"#666\",\n    columnHeaderHalign: \"left\", // except: group header labels always 'center'; numbers always 'right' per `setPSP`\n    columnHeaderBackgroundColor: \"#fff\",\n    columnHeaderForegroundSelectionColor: \"#333\",\n    rowHeaderForegroundSelectionFont: \"12px Arial, Helvetica, sans-serif\",\n    treeHeaderColor: \"#666\",\n    treeHeaderBackgroundColor: \"#fff\",\n    hoverCellHighlight: {\n        enabled: true,\n        backgroundColor: \"#eeeeee\"\n    },\n    hoverRowHighlight: {\n        enabled: true,\n        backgroundColor: \"#f6f6f6\"\n    }\n};\n\nconst dynamic_defaults = {\n    rowBackgroundSelectionColor: \"rgba(147, 185, 255, 0.625)\",\n    cellBackgroundSelectionColor: \"#fff\",\n    rowSelectionRegionOutlineColor: \"transparent\",\n    cellSelectionRegionOutlineColor: \"rgba(0,0,0,0.2)\"\n};\n\nexport function get_dynamic_styles(elem, selectable) {\n    const properties = {\n        singleRowSelectionMode: selectable,\n        autoSelectRows: selectable,\n        rowSelection: selectable\n    };\n\n    if (selectable) {\n        properties.selectionRegionOutlineColor = get_style(elem, `${title}-selection--border-color`) || dynamic_defaults.rowSelectionRegionOutlineColor;\n        properties.backgroundSelectionColor = get_style(elem, `${title}-selection--background`) || dynamic_defaults.rowBackgroundSelectionColor;\n    } else {\n        properties.selectionRegionOutlineColor = get_style(elem, `${title}-editor--border-color`) || dynamic_defaults.cellSelectionRegionOutlineColor;\n        properties.backgroundSelectionColor = dynamic_defaults.rowSelectionRegionOutlineColor;\n    }\n    return properties;\n}\n\nexport function default_grid_properties() {\n    const properties = Object.assign({}, cloneDeep(base_grid_properties), cloneDeep(light_theme_overrides));\n    return properties;\n}\n","/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport Textfield from \"faux-hypergrid/src/cellEditors/Textfield\";\n\nfunction px(n) {\n    return n + \"px\";\n}\n\nfunction validateEditorValueDate(x) {\n    const d = new Date(x);\n    return !(d instanceof Date && !isNaN(d));\n}\n\nfunction setBoundsDate(cellBounds) {\n    const style = this.el.style;\n    style.left = px(cellBounds.x - 1);\n    style.top = px(cellBounds.y - 1);\n    style.width = px(cellBounds.width + 52);\n    style.height = px(cellBounds.height + 2);\n}\n\nfunction setBoundsText(cellBounds) {\n    const style = this.el.style;\n    style.left = px(cellBounds.x - 1);\n    style.top = px(cellBounds.y - 1);\n    style.width = px(cellBounds.width + 2);\n    style.height = px(cellBounds.height + 2);\n}\n\nfunction setEditorValueDate(x) {\n    if (x === null) {\n        return;\n    }\n    const now = new Date(x);\n    const day = (\"0\" + now.getDate()).slice(-2);\n    const month = (\"0\" + (now.getMonth() + 1)).slice(-2);\n    this.input.value = `${now.getFullYear()}-${month}-${day}`;\n    this.input.addEventListener(\"keydown\", keydown.bind(this));\n}\n\nfunction setEditorValueDatetime(x) {\n    if (x === null) {\n        return;\n    }\n    const now = new Date(x);\n    const day = (\"0\" + now.getDate()).slice(-2);\n    const month = (\"0\" + (now.getMonth() + 1)).slice(-2);\n    const hour = (\"0\" + now.getHours()).slice(-2);\n    const minute = (\"0\" + now.getMinutes()).slice(-2);\n    const ss = (\"0\" + now.getSeconds()).slice(-2);\n    this.input.value = `${now.getFullYear()}-${month}-${day}T${hour}:${minute}:${ss}`;\n    this.input.addEventListener(\"keydown\", keydown.bind(this));\n}\n\nfunction setEditorValueText(updated) {\n    // Move keyup so nav and edit don't conflict\n    this.input.addEventListener(\"keydown\", keydown.bind(this));\n    // refire mouseover so hover does not go away when mouse stays over edit\n    // cell\n    this.input.addEventListener(\"mouseover\", event => {\n        var mouseMoveEvent = document.createEvent(\"MouseEvents\");\n        mouseMoveEvent.initMouseEvent(\n            \"mouseover\",\n            event.canBubble,\n            event.cancelable,\n            window,\n            event.detail,\n            event.screenX,\n            event.screenY,\n            event.clientX,\n            event.clientY,\n            event.ctrlKey,\n            event.altKye,\n            event.shiftKey,\n            event.metaKey,\n            event.button,\n            event.relatedTarget\n        );\n        this._canvas.dispatchEvent(mouseMoveEvent);\n    });\n    if (updated === null) {\n        return \"\";\n    } else {\n        this.input.value = this.localizer.format(updated);\n        return updated;\n    }\n}\n\nfunction getEditorValueText(updated) {\n    this._row.then(([old]) => {\n        const index = old.__INDEX__;\n        delete old[\"__INDEX__\"];\n        const colname = Object.keys(old)[0];\n        this._table.update([{__INDEX__: index, [colname]: updated}]);\n    });\n    return this.localizer.format(updated);\n}\n\nfunction getEditorValueNumber(updated) {\n    this._row.then(([old]) => {\n        const index = old.__INDEX__;\n        delete old[\"__INDEX__\"];\n        const colname = Object.keys(old)[0];\n        this._table.update([{__INDEX__: index, [colname]: Number(updated.replace(/,/g, \"\"))}]);\n    });\n    return this.localizer.format(updated);\n}\n\nfunction getEditorValueDate(updated) {\n    updated = new Date(updated);\n    this._row.then(([old]) => {\n        const index = old.__INDEX__;\n        delete old[\"__INDEX__\"];\n        const colname = Object.keys(old)[0];\n        this._table.update([{__INDEX__: index, [colname]: updated}]);\n    });\n    return this.localizer.format(updated);\n}\n\nfunction saveEditorValue(x) {\n    var save = !(x && x === this.initialValue) && this.grid.fireBeforeCellEdit(this.event.gridCell, this.initialValue, x, this);\n    if (save) {\n        const row = this.event.gridCell.y + this.grid.renderer.dataWindow.top - 1;\n        const col = this.event.gridCell.x;\n        this._data[row][col] = x;\n        this.grid.canvas.paintNow();\n    }\n}\n\nfunction keyup() {}\n\nfunction keydown(e) {\n    e.stopPropagation();\n    let grid = this.grid,\n        cellProps = this.event.properties,\n        feedbackCount = cellProps.feedbackCount,\n        keyChar = grid.canvas.getKeyChar(e),\n        specialKeyup,\n        stopped;\n\n    if ((specialKeyup = this.specialKeyups[e.keyCode]) && (stopped = this[specialKeyup](feedbackCount))) {\n        grid.repaint();\n    }\n\n    if (cellProps.mappedNavKey(keyChar, e.ctrlKey)) {\n        if (!specialKeyup && (stopped = this.stopEditing(feedbackCount))) {\n            grid.repaint();\n        }\n    }\n\n    this.grid.fireSyntheticEditorKeyUpEvent(this, e);\n\n    return stopped;\n}\n\nfunction stopEditing(feedback) {\n    var str = this.input.value;\n\n    try {\n        var error = this.validateEditorValue(str);\n        if (!error) {\n            var value = this.getEditorValue(str);\n        }\n    } catch (err) {\n        error = err;\n    }\n\n    if (!error && this.grid.fireSyntheticEditorDataChangeEvent(this, this.initialValue, value)) {\n        try {\n            this.saveEditorValue(value);\n        } catch (err) {\n            error = err;\n        }\n    }\n\n    if (!error) {\n        const {x, y} = this.grid.selectionModel.getLastSelection().origin;\n        this.grid.selectionModel.select(x, y + 1, 0, 0);\n        this.hideEditor();\n        this.grid.cellEditor = null;\n        this.grid._is_editing = true;\n        this.el.remove();\n        this.grid._is_editing = false;\n        this.grid.div.parentNode.parentNode.host.focus();\n    } else if (feedback >= 0) {\n        // false when `feedback` undefined\n        this.errorEffectBegin(++this.errors % feedback === 0 && error);\n    } else {\n        // invalid but no feedback\n        this.cancelEditing();\n    }\n\n    return !error;\n}\n\nfunction cancelEditing() {\n    this.setEditorValue(this.initialValue);\n    this.hideEditor();\n    this.grid.cellEditor = null;\n    this.grid._is_editing = true;\n    this.el.remove();\n    this.grid._is_editing = false;\n    this.grid.takeFocus();\n\n    return true;\n}\n\nexport function set_editors(grid) {\n    const date = Textfield.extend(\"perspective-date\", {\n        localizer: grid.localization.get(\"chromeDate\"),\n        template: \"<input class='hypergrid-textfield' type='date'>\",\n        getEditorValue: getEditorValueDate,\n        setEditorValue: setEditorValueDate,\n        validateEditorValue: validateEditorValueDate,\n        setBounds: setBoundsDate,\n        selectAll: () => {},\n        saveEditorValue,\n        keyup,\n        stopEditing,\n        cancelEditing\n    });\n\n    const datetime = Textfield.extend(\"perspective-datetime\", {\n        localizer: grid.localization.get(\"chromeDate\"),\n        template: \"<input class='hypergrid-textfield' type='datetime-local'>\",\n        getEditorValue: getEditorValueDate,\n        setEditorValue: setEditorValueDatetime,\n        validateEditorValue: validateEditorValueDate,\n        setBounds: setBoundsDate,\n        selectAll: () => {},\n        saveEditorValue,\n        keyup,\n        stopEditing,\n        cancelEditing\n    });\n\n    const text = Textfield.extend(\"perspective-text\", {\n        setBounds: setBoundsText,\n        setEditorValue: setEditorValueText,\n        getEditorValue: getEditorValueText,\n        saveEditorValue,\n        keyup,\n        stopEditing,\n        cancelEditing\n    });\n\n    const number = Textfield.extend(\"perspective-number\", {\n        setBounds: setBoundsText,\n        setEditorValue: setEditorValueText,\n        getEditorValue: getEditorValueNumber,\n        validateEditorValue: x => isNaN(Number(x.replace(/,/g, \"\"))),\n        saveEditorValue,\n        keyup,\n        stopEditing,\n        cancelEditing\n    });\n\n    grid.cellEditors.add(number);\n    grid.cellEditors.add(date);\n    grid.cellEditors.add(datetime);\n    grid.cellEditors.add(text);\n}\n","/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nexport function treeLineRendererPaint(gc, config) {\n    var x = config.bounds.x;\n    var y = config.bounds.y;\n    var width = config.bounds.width;\n    var height = config.bounds.height;\n\n    config.minWidth = 1;\n    if (config.value === null) {\n        return;\n    }\n\n    var value = config.value.rollup;\n    var leaf = config.value.isLeaf;\n    var depth = config.value.rowPath.length - 1;\n    var parent = config.expanded;\n    var lastChild = config.last;\n\n    var backgroundColor = config.backgroundColor;\n    if (config.isSelected) {\n        backgroundColor = config.backgroundSelectionColor;\n    }\n    if (config.isRowHovered && config.hoverRowHighlight.enabled && !config.isCellHovered) {\n        backgroundColor = config.hoverRowHighlight.backgroundColor;\n    } else if (config.isCellHovered && config.hoverCellHighlight.enabled) {\n        backgroundColor = config.hoverCellHighlight.backgroundColor;\n    }\n\n    gc.save();\n    gc.cache.fillStyle = backgroundColor;\n    gc.rect(x, y, width, height);\n    gc.fillRect(x, y, width, height);\n\n    var fgColor = config.gridLinesHColor; //config.isSelected ? config.foregroundSelectionColor : config.lineColor;\n    gc.cache.strokeStyle = fgColor;\n    gc.cache.fillStyle = fgColor;\n    var xOffset = x;\n    var lineNodeSpace = 16;\n    var nodeRadius = 3;\n\n    // Draw vertical line\n    gc.globalAlpha = 0.7;\n    gc.strokeStyle = fgColor;\n\n    gc.beginPath();\n    for (var i = 1; i <= depth; i++) {\n        xOffset += lineNodeSpace;\n        var lineHeight = lastChild && !parent ? height / 2 : height;\n        gc.moveTo(xOffset, y);\n        gc.lineTo(xOffset, y);\n        gc.lineTo(xOffset, y + lineHeight);\n        if (i === depth) {\n            gc.moveTo(xOffset, y + height / 2);\n            gc.lineTo(xOffset, y + height / 2);\n            gc.lineTo(xOffset + lineNodeSpace - nodeRadius, y + height / 2);\n        } else {\n            gc.lineTo(xOffset, y + height);\n        }\n    }\n\n    // Draw node circle\n    if (!leaf) {\n        gc.moveTo(xOffset + lineNodeSpace + nodeRadius, y + height / 2);\n        gc.arc(xOffset + lineNodeSpace, y + height / 2, nodeRadius, 0, 2 * Math.PI);\n        if (config.isCellHovered) {\n            gc.globalAlpha = 1.0;\n            gc.fill();\n            gc.globalAlpha = 0.7;\n        }\n    } else {\n        gc.lineTo(xOffset + lineNodeSpace + nodeRadius, y + height / 2);\n    }\n\n    if (parent && !leaf) {\n        gc.globalAlpha = 0.5;\n        gc.fill();\n        gc.moveTo(xOffset + lineNodeSpace, y + height / 2 + nodeRadius);\n        gc.lineTo(xOffset + lineNodeSpace, y + height);\n        gc.globalAlpha = 0.7;\n    }\n\n    gc.stroke();\n    gc.closePath();\n\n    // render message text\n\n    gc.globalAlpha = 1.0;\n    gc.fillStyle = config.isSelected ? config.foregroundSelectionColor : config.color;\n    gc.textAlign = \"start\";\n    gc.textBaseline = \"middle\";\n    gc.font = config.isSelected ? config.foregroundSelectionFont : config.treeHeaderFont;\n    var cellTextOffset = xOffset + lineNodeSpace + 2 * nodeRadius + 3;\n    let formatted_value = config.formatValue(value, config._type);\n    config.minWidth = cellTextOffset + gc.getTextWidth(formatted_value) + 15;\n    var metrics = gc.getTextWidthTruncated(formatted_value, width - cellTextOffset + (x - 3), true);\n    var yOffset = y + height / 2;\n    gc.fillText(metrics.string ? metrics.string : formatted_value, cellTextOffset, yOffset);\n    gc.restore();\n}\n","/******************************************************************************\r\n *\r\n * Copyright (c) 2017, the Perspective Authors.\r\n *\r\n * This file is part of the Perspective library, distributed under the terms of\r\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\r\n *\r\n */\r\n\r\nimport Hypergrid from \"faux-hypergrid\";\r\nimport Base from \"faux-hypergrid/src/Base\";\r\nimport Canvas from \"faux-hypergrid/src/lib/Canvas\";\r\nimport groupedHeaderPlugin from \"fin-hypergrid-grouped-header-plugin\";\r\n\r\nimport * as perspectivePlugin from \"./perspective-plugin\";\r\nimport PerspectiveDataModel from \"./PerspectiveDataModel\";\r\nimport {psp2hypergrid} from \"./psp-to-hypergrid\";\r\n\r\nimport {bindTemplate, registerPlugin} from \"@finos/perspective-viewer/dist/esm/utils.js\";\r\n\r\nimport TEMPLATE from \"../html/hypergrid.html\";\r\n\r\nimport style from \"../less/hypergrid.less\";\r\nimport {get_styles, clear_styles, get_dynamic_styles, default_grid_properties} from \"./styles.js\";\r\nimport {set_formatters} from \"./formatters.js\";\r\nimport {set_editors} from \"./editors.js\";\r\nimport {treeLineRendererPaint} from \"./hypergrid-tree-cell-renderer\";\r\n\r\nCanvas.prototype.stopResizeLoop();\r\nCanvas.prototype.stopPaintLoop();\r\n\r\nbindTemplate(\r\n    TEMPLATE,\r\n    style\r\n)(\r\n    class HypergridElement extends HTMLElement {\r\n        set_data(data, schema, tschema, row_pivots, columns, force = false) {\r\n            const hg_data = psp2hypergrid(data, schema, tschema, row_pivots, columns);\r\n            if (this.grid) {\r\n                this.grid.behavior.setPSP(hg_data, force);\r\n            } else {\r\n                this._hg_data = hg_data;\r\n            }\r\n        }\r\n\r\n        connectedCallback() {\r\n            if (!this.grid) {\r\n                const host = this.shadowRoot.querySelector(\"#mainGrid\");\r\n\r\n                host.setAttribute(\"hidden\", true);\r\n                Canvas.prototype.restartPaintLoop();\r\n                this.grid = new Hypergrid(host, {DataModel: PerspectiveDataModel});\r\n                Canvas.prototype.stopPaintLoop();\r\n                host.removeAttribute(\"hidden\");\r\n                this.grid.get_styles = () => get_styles(this);\r\n                this.grid.get_dynamic_styles = (...args) => get_dynamic_styles(this, ...args);\r\n\r\n                const grid_properties = default_grid_properties();\r\n                const styles = get_styles(this);\r\n                grid_properties.renderer = [\"SimpleCell\", \"Borders\"];\r\n\r\n                // Handle grouped header plugin bugs\r\n                Object.assign(grid_properties.groupedHeader, styles[\"\"].groupedHeader);\r\n                if (typeof grid_properties.groupedHeader.flatHeight === \"number\") {\r\n                    grid_properties.groupedHeader.flatHeight = grid_properties.groupedHeader.flatHeight.toString();\r\n                }\r\n\r\n                this.grid.installPlugins([perspectivePlugin, [groupedHeaderPlugin, grid_properties.groupedHeader]]);\r\n\r\n                // Broken in fin-hypergrid-grouped-header 0.1.2\r\n                let _old_paint = this.grid.cellRenderers.items.GroupedHeader.paint;\r\n                this.grid.cellRenderers.items.GroupedHeader.paint = function(gc, config) {\r\n                    this.visibleColumns = config.grid.renderer.visibleColumns;\r\n                    return _old_paint.call(this, gc, config);\r\n                };\r\n\r\n                this.grid.addProperties(grid_properties);\r\n                this.grid.addProperties(styles[\"\"]);\r\n\r\n                set_formatters(this.grid);\r\n                set_editors(this.grid);\r\n\r\n                // Add tree cell renderer\r\n                this.grid.cellRenderers.add(\"TreeCell\", Base.extend({paint: treeLineRendererPaint}));\r\n\r\n                if (this._hg_data) {\r\n                    this.grid.behavior.setPSP(this._hg_data);\r\n                    delete this._hgdata;\r\n                }\r\n            }\r\n        }\r\n    }\r\n);\r\n\r\nconst HYPERGRID_INSTANCE = Symbol(\"Hypergrid private\");\r\n\r\nasync function grid_update(div, view, task) {\r\n    const nrows = await view.num_rows();\r\n    if (task.cancelled) {\r\n        return;\r\n    }\r\n    const hypergrid = get_hypergrid.call(this);\r\n    if (!hypergrid) {\r\n        return;\r\n    }\r\n    const dataModel = hypergrid.behavior.dataModel;\r\n    dataModel._view = view;\r\n    dataModel._table = this._table;\r\n    dataModel.setDirty(nrows);\r\n    hypergrid.behaviorChanged();\r\n    hypergrid.canvas.paintNow();\r\n}\r\n\r\nfunction style_element() {\r\n    if (this[HYPERGRID_INSTANCE]) {\r\n        const element = this[HYPERGRID_INSTANCE];\r\n        clear_styles(element);\r\n        const styles = get_styles(element);\r\n        if (element.grid) {\r\n            element.grid.addProperties(styles[\"\"]);\r\n        }\r\n        element.grid.behavior.createColumns();\r\n        element.grid.canvas.paintNow();\r\n    }\r\n}\r\n\r\nfunction get_hypergrid() {\r\n    return this[HYPERGRID_INSTANCE] ? this[HYPERGRID_INSTANCE].grid : undefined;\r\n}\r\n\r\n/**\r\n * Create a new <perspective-hypergrid> web component, and attach it to the DOM.\r\n *\r\n * @param {HTMLElement} div Attachment point.\r\n */\r\nasync function getOrCreateHypergrid(div) {\r\n    let perspectiveHypergridElement;\r\n    if (!get_hypergrid.call(this)) {\r\n        perspectiveHypergridElement = this[HYPERGRID_INSTANCE] = document.createElement(\"perspective-hypergrid\");\r\n        perspectiveHypergridElement.setAttribute(\"tabindex\", 1);\r\n        perspectiveHypergridElement.addEventListener(\"blur\", () => {\r\n            if (perspectiveHypergridElement.grid && !perspectiveHypergridElement.grid._is_editing) {\r\n                perspectiveHypergridElement.grid.selectionModel.clear(true); //keepRowSelections = true\r\n                perspectiveHypergridElement.grid.paintNow();\r\n            }\r\n        });\r\n    } else {\r\n        perspectiveHypergridElement = this[HYPERGRID_INSTANCE];\r\n    }\r\n\r\n    if (!perspectiveHypergridElement.isConnected) {\r\n        div.innerHTML = \"\";\r\n        div.appendChild(perspectiveHypergridElement);\r\n        await new Promise(resolve => setTimeout(resolve));\r\n        perspectiveHypergridElement.grid.canvas.resize(false);\r\n    }\r\n    return perspectiveHypergridElement;\r\n}\r\n\r\nfunction suppress_paint(hypergrid, f) {\r\n    const canvas = hypergrid.divCanvas;\r\n    hypergrid.divCanvas = undefined;\r\n    f();\r\n    hypergrid.divCanvas = canvas;\r\n}\r\n\r\nasync function grid_create(div, view, task, max_rows, max_cols, force) {\r\n    let hypergrid = get_hypergrid.call(this);\r\n    if (hypergrid) {\r\n        hypergrid.behavior.dataModel._view = undefined;\r\n        hypergrid.behavior.dataModel._table = undefined;\r\n        suppress_paint(hypergrid, () => hypergrid.allowEvents(false));\r\n    }\r\n\r\n    const config = await view.get_config();\r\n\r\n    if (task.cancelled) {\r\n        return;\r\n    }\r\n    const colPivots = config.column_pivots;\r\n    const rowPivots = config.row_pivots;\r\n    const data_window = {\r\n        start_row: 0,\r\n        end_row: 1,\r\n        id: rowPivots.length === 0 && colPivots.length === 0\r\n    };\r\n\r\n    const [nrows, json, schema, tschema, all_columns] = await Promise.all([view.num_rows(), view.to_columns(data_window), view.schema(), this._table.schema(), view.column_paths()]);\r\n\r\n    if (task.cancelled) {\r\n        return;\r\n    }\r\n\r\n    let perspectiveHypergridElement = await getOrCreateHypergrid.call(this, div);\r\n    hypergrid = get_hypergrid.call(this);\r\n\r\n    if (task.cancelled) {\r\n        return;\r\n    }\r\n\r\n    const columns = all_columns.filter(x => x !== \"__INDEX__\");\r\n    const dataModel = hypergrid.behavior.dataModel;\r\n    dataModel._grid = hypergrid;\r\n\r\n    dataModel.setIsTree(rowPivots.length > 0);\r\n    dataModel.setDirty(nrows);\r\n    dataModel.clearSelectionState();\r\n    dataModel._view = view;\r\n    dataModel._table = this._table;\r\n    dataModel._config = config;\r\n    dataModel._viewer = this;\r\n    dataModel._columns = columns;\r\n    dataModel._pad_window = this.hasAttribute(\"settings\");\r\n\r\n    hypergrid.renderer.needsComputeCellsBounds = true;\r\n    suppress_paint(hypergrid, () => perspectiveHypergridElement.set_data(json, schema, tschema, rowPivots, columns, force));\r\n    if (hypergrid.behavior.dataModel._outstanding) {\r\n        await hypergrid.behavior.dataModel._outstanding.req;\r\n    }\r\n\r\n    if (this._plugin_config) {\r\n        suppress_paint(hypergrid, () => dataModel.setSelectedRowID(this._plugin_config.selected));\r\n        delete this._plugin_config;\r\n    }\r\n\r\n    await hypergrid.canvas.resize(true);\r\n    hypergrid.allowEvents(true);\r\n}\r\n\r\nconst plugin = {\r\n    name: \"Grid\",\r\n    create: grid_create,\r\n    selectMode: \"toggle\",\r\n    update: grid_update,\r\n    deselectMode: \"pivots\",\r\n    styleElement: style_element,\r\n    save: function() {\r\n        const hypergrid = get_hypergrid.call(this);\r\n        if (hypergrid && hypergrid.selectionModel.hasRowSelections()) {\r\n            return {selected: hypergrid.behavior.dataModel.getSelectedRowID()};\r\n        }\r\n    },\r\n    restore: function(config) {\r\n        this._plugin_config = config;\r\n    },\r\n    resize: async function() {\r\n        const hypergrid = get_hypergrid.call(this);\r\n        if (hypergrid) {\r\n            let nrows = await this._view.num_rows();\r\n            hypergrid.behavior.dataModel.setDirty(nrows);\r\n            await hypergrid.canvas.resize(true);\r\n        }\r\n    },\r\n    delete: function() {\r\n        const hypergrid = get_hypergrid.call(this);\r\n        if (hypergrid) {\r\n            hypergrid.terminate();\r\n            hypergrid.div = undefined;\r\n            hypergrid.canvas.div = undefined;\r\n            hypergrid.canvas.canvas = undefined;\r\n            hypergrid.sbVScroller = undefined;\r\n            hypergrid.sbHScroller = undefined;\r\n            delete this[HYPERGRID_INSTANCE];\r\n        }\r\n    }\r\n};\r\n\r\nregisterPlugin(\"hypergrid\", plugin);\r\n"],"sourceRoot":""}